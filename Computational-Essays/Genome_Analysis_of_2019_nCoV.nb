(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    263665,       5573]
NotebookOptionsPosition[    252224,       5395]
NotebookOutlinePosition[    252646,       5412]
CellTagsIndexPosition[    252603,       5409]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Genomic comparisons", "Section",
 CellChangeTimes->{{3.7900231093488693`*^9, 
  3.7900231136450033`*^9}},ExpressionUUID->"b32d0b45-a01e-4b77-8d41-\
4cfb7de70057"],

Cell["\<\
I will start with a list of GenBank accession IDs. These were culled from a \
large list comprised of sequences I have seen in recent literature, blogs, \
and elsewhere, all for the purpose of comparison to 2019-nCoV. GenBank has \
the data for these in FASTA format. The last two lines are comprised of IDs \
for several of the 2019-nCoV sequences that have been placed in GenBank to \
date. The first of those is the initial such.\
\>", "Text",
 CellChangeTimes->{{3.790018780272553*^9, 3.790018987635302*^9}, {
   3.7900192274306307`*^9, 3.790019242895314*^9}, {3.790019367817697*^9, 
   3.790019442081901*^9}, {3.7900225650941687`*^9, 3.790022565757903*^9}, 
   3.790023125016095*^9, {3.790106558601575*^9, 
   3.7901065617259083`*^9}},ExpressionUUID->"aa817a51-1596-48c2-961f-\
a0918d63929c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"manyviruses", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<MG772933\>\"", ",", "\"\<MG772934\>\"", ",", "\[IndentingNewLine]", 
     "\"\<MK211376\>\"", ",", "\"\<KJ473816\>\"", ",", "\"\<KY417145\>\"", 
     ",", "\"\<KF294455\>\"", ",", "\"\<KY417144\>\"", ",", 
     "\[IndentingNewLine]", "\"\<AY395003\>\"", ",", "\"\<AY394996\>\"", ",", 
     "\"\<AY390556\>\"", ",", "\"\<EU371564\>\"", ",", "\"\<AY394985\>\"", 
     ",", "\"\<EU371559\>\"", ",", "\"\<AY559093\>\"", ",", 
     "\"\<NC_004718\>\"", ",", "\"\<AY304488\>\"", ",", 
     "\[IndentingNewLine]", "\"\<AY502927\>\"", ",", "\"\<GU553365\>\"", ",", 
     "\"\<EU371562\>\"", ",", "\"\<AY278488\>\"", ",", "\"\<AY274119\>\"", 
     ",", "\[IndentingNewLine]", "\"\<NC_005831\>\"", ",", "\"\<MF542265\>\"",
      ",", "\"\<KY983587\>\"", ",", "\"\<KY967357\>\"", ",", 
     "\[IndentingNewLine]", "\"\<AY729016\>\"", ",", "\"\<NC_006579\>\"", 
     ",", "\"\<NC_019843.3\>\"", ",", "\"\<NC_038294\>\"", ",", 
     "\[IndentingNewLine]", "\"\<MN908947.3\>\"", ",", "\"\<MN938384\>\"", 
     ",", "\"\<MN975262\>\"", ",", "\"\<MN985325\>\"", ",", 
     "\"\<MN988713\>\"", " ", ",", "\"\<MN988668\>\"", ",", 
     "\"\<MN994467\>\"", ",", "\"\<MN994468\>\"", ",", "\"\<MN997409\>\"", 
     ",", "\"\<MN988669\>\"", ",", "\"\<MN996527\>\"", ",", 
     "\"\<MN996528\>\"", ",", "\"\<MN996529\>\"", ",", "\"\<MN996530\>\"", 
     ",", "\"\<MN996531\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"manyviruses", "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.789818920640368*^9, 3.789818922836912*^9}, {
  3.789818994407364*^9, 3.789818995774146*^9}, {3.78981904335139*^9, 
  3.789819072318074*^9}, {3.789936082567593*^9, 3.7899360829348993`*^9}, {
  3.7899369827833023`*^9, 3.789937003404652*^9}, {3.789937038758691*^9, 
  3.789937053110299*^9}, {3.7899370894778967`*^9, 3.7899371110542088`*^9}, {
  3.789997798876994*^9, 3.7899978017427*^9}, {3.789998329874311*^9, 
  3.7899983466017303`*^9}, {3.7900189968849373`*^9, 3.7900189998910093`*^9}, {
  3.790019360807106*^9, 3.79001937707325*^9}, {3.790020130982091*^9, 
  3.790020139523788*^9}, {3.7900202140231047`*^9, 3.7900202345823307`*^9}, {
  3.79002041707646*^9, 
  3.7900204294959908`*^9}},ExpressionUUID->"fdb592d5-7854-4e30-842d-\
1aa4cfc71ef2"],

Cell[BoxData["44"], "Output",
 CellChangeTimes->{
  3.790019255982881*^9, 3.790020141430523*^9, {3.7900202271109333`*^9, 
   3.7900202389011393`*^9}, 3.790020432220331*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"65e83792-abc8-4621-bffe-bc12c08ef3a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing sequences from GenBank", "Subsection",
 CellChangeTimes->{{3.790023836974853*^9, 
  3.7900238525914593`*^9}},ExpressionUUID->"03b19571-5dcf-4909-88b7-\
21f63ce9e9f7"],

Cell[TextData[{
 "We obtain the sequences using a really handy function from the Wolfram \
Function Repository (WFR): ",
 StyleBox["ImportFASTA", "Program"],
 ". It was written by my colleague Brendan Elli. It started out as code he \
wrote in response to a request I made in-house. No good deed goes unpunished. \
Also note that my colleague John Cassel has created a resource data object \
containing the 2019-nCoV examples above as well as new ones that have been \
more recently sequenced  (he also provided some helpful advice for this \
notebook). For other useful resource of 2019-nCoV genetic data please see the \
following Wolfram Data Repository entry:\n",
 ButtonBox["https://datarepository.wolframcloud.com/resources/Genetic-\
Sequences-for-Novel-Coronavirus-2019-nCoV-from-Wuhan-China",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://datarepository.wolframcloud.com/resources/Genetic-Sequences-\
for-Novel-Coronavirus-2019-nCoV-from-Wuhan-China"], None},
  ButtonNote->
   "https://datarepository.wolframcloud.com/resources/Genetic-Sequences-for-\
Novel-Coronavirus-2019-nCoV-from-Wuhan-China"]
}], "Text",
 CellChangeTimes->{{3.790019055382267*^9, 3.790019130686845*^9}, {
   3.790083956803421*^9, 3.790084126885627*^9}, {3.790106460497875*^9, 
   3.790106461659184*^9}, {3.7901065014955797`*^9, 3.790106502107294*^9}, 
   3.790106565031767*^9, {3.790106669612999*^9, 3.790106680303289*^9}, {
   3.790106776915476*^9, 
   3.790106786500512*^9}},ExpressionUUID->"95445642-d546-4045-8963-\
ee53574b0a00"],

Cell["\<\
On my machine it takes around a second to obtain each sequence. From past \
usage I am fairly sure this has to do with server access requirements and not \
sequence lengths.\
\>", "Text",
 CellChangeTimes->{{3.790019148077248*^9, 
  3.7900191963901987`*^9}},ExpressionUUID->"bad828d5-6975-4e6c-adfa-\
156f6d0a580a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"vseqs", "=", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{"ResourceFunction", "[", "\"\<ImportFASTA\>\"", "]"}], ",", 
      "manyviruses"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.789819177608595*^9, 3.7898191799429903`*^9}, 
   3.7898257274697437`*^9},ExpressionUUID->"5d0319ca-788d-4250-bfd1-\
099ea7040ed7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"46.386183`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.7900047016572123`*^9, 3.790020198339685*^9, 
  3.790020292712391*^9, 3.790020482694344*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"ccc3fdba-3ee1-42d9-8fca-7cb51549493d"]
}, Open  ]],

Cell["\<\
We now separate out names and genome sequences. It turns out that some \
sequences have a trailing repeated \[OpenCurlyDoubleQuote]A\
\[CloseCurlyDoubleQuote] (for adenine) and others have this removed; in \
particular both types appear in the 2019-nCoV set, and this is almost \
certainly an artifact of either sequencing protocols or perhaps decisions to \
remove trailing \[OpenCurlyDoubleQuote]junk\[CloseCurlyDoubleQuote]. I found \
that by removing it uniformly we get results that seem not to suffer from \
artificial discrepancies.\
\>", "Text",
 CellChangeTimes->{{3.790019209934472*^9, 3.790019219807687*^9}, {
   3.7900192642943068`*^9, 3.790019268487113*^9}, {3.790019768647539*^9, 
   3.790019775469619*^9}, 
   3.790106570350737*^9},ExpressionUUID->"73f30204-334b-4d75-883f-\
f55f88475701"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"vseqs", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vstrings", "=", 
   RowBox[{"vseqs", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"shortnames", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{"#", ",", "30"}], "]"}], "&"}], ",", "names"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vstrings", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReplace", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<A\>\"", ".."}], "~~", " ", "EndOfString"}], 
         "\[RuleDelayed]", "\"\<\>\""}]}], "]"}], "&"}], ",", "vstrings"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7898257378813868`*^9, 3.789825739213396*^9}, {
  3.789998831260359*^9, 3.7899988348420362`*^9}, {3.7900045685866528`*^9, 
  3.7900045908500433`*^9}},
 CellLabel->
  "In[412]:=",ExpressionUUID->"3b2a09bd-36e7-4b57-a7ef-be42dba37e81"],

Cell["\<\
The lengths are all in the ballpark of 30K nucleotides, with the exception of \
two (they may have been only partial sequences).\
\>", "Text",
 CellChangeTimes->{{3.790019488154051*^9, 
  3.7900195245786867`*^9}},ExpressionUUID->"c2dc76e1-dfe1-4da9-b2d2-\
57bf0b7d60f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"StringLength", ",", "vstrings"}], "]"}]], "Input",
 CellChangeTimes->{{3.790003913027739*^9, 
  3.79000391970542*^9}},ExpressionUUID->"0eff5fa6-7888-4dec-88c6-\
121512ad7860"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29776", ",", "29706", ",", "30256", ",", "29141", ",", "29694", ",", 
   "21477", ",", "29754", ",", "29623", ",", "29659", ",", "29756", ",", 
   "29508", ",", "29506", ",", "29727", ",", "29711", ",", "29727", ",", 
   "29730", ",", "29727", ",", "29644", ",", "29598", ",", "29708", ",", 
   "29727", ",", "27553", ",", "27246", ",", "27234", ",", "27202", ",", 
   "14886", ",", "14885", ",", "30107", ",", "30099", ",", "29870", ",", 
   "29838", ",", "29870", ",", "29870", ",", "29870", ",", "29869", ",", 
   "29870", ",", "29870", ",", "29870", ",", "29869", ",", "29825", ",", 
   "29870", ",", "29852", ",", "29854", ",", "29857"}], "}"}]], "Output",
 CellChangeTimes->{3.790003920978506*^9, 3.790019458341647*^9, 
  3.790020292960169*^9, 3.79002048280063*^9},
 CellLabel->
  "Out[416]=",ExpressionUUID->"af0db3d8-7cc9-4497-8c73-003da724e35e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building a phylogenetic tree", "Subsection",
 CellChangeTimes->{{3.790023868615322*^9, 
  3.7900238745122433`*^9}},ExpressionUUID->"d3abb933-f5c8-486a-b56c-\
fb0c19e37726"],

Cell[TextData[{
 "Now we will create a phylogenetic tree, again with a handy WFR function, ",
 StyleBox["PhylogeneticTreePlot", "Program"],
 ". I use a color scheme that is intended to group families but I do not \
claim to have done this without errors."
}], "Text",
 CellChangeTimes->{{3.790019803590053*^9, 3.790019828241707*^9}, {
  3.790020499768093*^9, 
  3.79002058472182*^9}},ExpressionUUID->"3764e445-c982-436c-9a09-\
972c2baca16d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Brown", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Red", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Blue", ",", "14"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Green", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Cyan", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"Black", ",", "15"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stylednames", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"Style", "[", 
     RowBox[{"shortnames", ",", "colors"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.789763928384884*^9, 3.789763951622025*^9}, {
   3.7897649182702103`*^9, 3.789765060055128*^9}, 3.78976542046285*^9, {
   3.789814998705472*^9, 3.789814999629901*^9}, {3.789815421383046*^9, 
   3.789815422268869*^9}, 3.7898156272487583`*^9, {3.7898191246549673`*^9, 
   3.789819131359171*^9}, 3.7899361016958714`*^9, {3.7899363296199493`*^9, 
   3.789936344426691*^9}, {3.7899369549917383`*^9, 3.789936959291649*^9}, {
   3.789937021916285*^9, 3.789937022180969*^9}, 3.789937060101005*^9, 
   3.789937119573772*^9, {3.789937345119575*^9, 3.7899373547453737`*^9}, {
   3.790004819469537*^9, 3.790004836684834*^9}, {3.790019946113556*^9, 
   3.790019969249086*^9}, {3.79002002980518*^9, 3.790020037844939*^9}, {
   3.790020105300569*^9, 3.790020116419311*^9}, {3.7900201861562557`*^9, 
   3.7900201946290894`*^9}, {3.790020444336866*^9, 3.790020447008924*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"50796bf8-2240-4d2f-a115-bd67ec67333b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PhylogeneticTreePlot\>\"", "]"}], "[", 
  RowBox[{"vstrings", ",", "stylednames", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7900198386711493`*^9, 3.790019852960537*^9}, {
   3.790019905209361*^9, 3.7900199159681187`*^9}, 3.790020003056292*^9, 
   3.790020049156*^9},ExpressionUUID->"09a1dbba-7e71-4b05-999b-037a94d2a388"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0, 1, 0]}, {{}, {
     LineBox[{{0, 1}, {-0.07975321281803519, 1}, {-0.07975321281803519, 2}, {
       0, 2}}], 
     LineBox[{{0, 
       3}, {-0.00011547192890180262`, 3}, {-0.00011547192890180262`, 4}, {0, 
       4}}], LineBox[{{-0.00011547192890180262`, 
       3.5}, {-0.00011938830548334271`, 3.5}, {-0.00011938830548334271`, 5}, {
       0, 5}}], 
     LineBox[{{-0.00011938830548334271`, 4.25}, {-0.0003678003754868972, 
       4.25}, {-0.0003678003754868972, 6}, {0, 6}}], 
     LineBox[{{0, 
       7}, {-4.184543361719978*^-31, 7}, {-4.184543361719978*^-31, 8}, {0, 
       8}}], LineBox[{{0, 
       9}, {-2.874467387942878*^-35, 9}, {-2.874467387942878*^-35, 10}, {0, 
       10}}], LineBox[{{-4.184543361719978*^-31, 
      7.5}, {-4.1553160023253526`*^-10, 7.5}, {-4.1553160023253526`*^-10, 
      9.5}, {-2.874467387942878*^-35, 9.5}}], 
     LineBox[{{-4.1553160023253526`*^-10, 8.5}, {-0.00017627711407553154`, 
       8.5}, {-0.00017627711407553154`, 11}, {0, 11}}], 
     LineBox[{{-0.00017627711407553154`, 9.75}, {-0.0001881334599948532, 
       9.75}, {-0.0001881334599948532, 12}, {0, 12}}], 
     LineBox[{{0, 
       13}, {-0.0002951794951188732, 13}, {-0.0002951794951188732, 14}, {0, 
       14}}], LineBox[{{-0.0001881334599948532, 
      10.875}, {-0.0003563969216557819, 10.875}, {-0.0003563969216557819, 
      13.5}, {-0.0002951794951188732, 13.5}}], 
     LineBox[{{-0.0003678003754868972, 5.125}, {-0.0003727469061033103, 
      5.125}, {-0.0003727469061033103, 12.1875}, {-0.0003563969216557819, 
      12.1875}}], 
     LineBox[{{-0.0003727469061033103, 8.65625}, {-0.0008531391848748661, 
       8.65625}, {-0.0008531391848748661, 15}, {0, 15}}], 
     LineBox[{{-0.0008531391848748661, 11.828125}, {-0.0009754004316790667, 
       11.828125}, {-0.0009754004316790667, 16}, {0, 16}}], 
     LineBox[{{-0.0009754004316790667, 13.9140625}, {-0.0011436433759628853`, 
       13.9140625}, {-0.0011436433759628853`, 17}, {0, 17}}], 
     LineBox[{{-0.07975321281803519, 1.5}, {-0.2097612149306542, 
      1.5}, {-0.2097612149306542, 15.45703125}, {-0.0011436433759628853`, 
      15.45703125}}], 
     LineBox[{{0, 
       18}, {-0.09655191191893579, 18}, {-0.09655191191893579, 19}, {0, 19}}],
      LineBox[{{0, 
       23}, {-4.3848743067008825`*^-31, 23}, {-4.3848743067008825`*^-31, 
        24}, {0, 24}}], 
     LineBox[{{0, 22}, {-0.0005366523828547404, 22}, {-0.0005366523828547404, 
       23.5}, {-4.3848743067008825`*^-31, 23.5}}], 
     LineBox[{{-0.0005366523828547404, 22.75}, {-0.0008459558040425122, 
       22.75}, {-0.0008459558040425122, 25}, {0, 25}}], 
     LineBox[{{-0.0008459558040425122, 23.875}, {-0.0011869268639658293`, 
       23.875}, {-0.0011869268639658293`, 26}, {0, 26}}], 
     LineBox[{{0, 
       21}, {-0.0021635083436789527`, 21}, {-0.0021635083436789527`, 
       24.9375}, {-0.0011869268639658293`, 24.9375}}], 
     LineBox[{{-0.0021635083436789527`, 22.96875}, {-0.0024762718439942633`, 
       22.96875}, {-0.0024762718439942633`, 27}, {0, 27}}], 
     LineBox[{{0, 
       29}, {-0.0009102472409207099, 29}, {-0.0009102472409207099, 30}, {0, 
       30}}], LineBox[{{0, 
       28}, {-0.0042661612833413435`, 28}, {-0.0042661612833413435`, 
       29.5}, {-0.0009102472409207099, 29.5}}], 
     LineBox[{{-0.0024762718439942633`, 24.984375}, {-0.0052408017796726665`, 
      24.984375}, {-0.0052408017796726665`, 28.75}, {-0.0042661612833413435`, 
      28.75}}], 
     LineBox[{{0, 
       31}, {-0.0029881482081148083`, 31}, {-0.0029881482081148083`, 32}, {0, 
       32}}], LineBox[{{-0.0052408017796726665`, 
      26.8671875}, {-0.005559071228184347, 
      26.8671875}, {-0.005559071228184347, 31.5}, {-0.0029881482081148083`, 
      31.5}}], LineBox[{{-0.005559071228184347, 
       29.18359375}, {-0.006818048101191627, 
       29.18359375}, {-0.006818048101191627, 33}, {0, 33}}], 
     LineBox[{{0, 
       20}, {-0.0069081797185126595`, 20}, {-0.0069081797185126595`, 
       31.091796875}, {-0.006818048101191627, 31.091796875}}], 
     LineBox[{{-0.09655191191893579, 18.5}, {-0.11303092059737944`, 
      18.5}, {-0.11303092059737944`, 25.5458984375}, {-0.0069081797185126595`,
       25.5458984375}}], 
     LineBox[{{-0.11303092059737944`, 22.02294921875}, {-0.1150106148820259, 
       22.02294921875}, {-0.1150106148820259, 34}, {0, 34}}], 
     LineBox[{{-0.1150106148820259, 28.011474609375}, {-0.119018418685691, 
       28.011474609375}, {-0.119018418685691, 35}, {0, 35}}], 
     LineBox[{{-0.119018418685691, 31.5057373046875}, {-0.16717220601581356`, 
       31.5057373046875}, {-0.16717220601581356`, 36}, {0, 36}}], 
     LineBox[{{-0.2097612149306542, 8.478515625}, {-0.243665419369327, 
      8.478515625}, {-0.243665419369327, 
      33.75286865234375}, {-0.16717220601581356`, 33.75286865234375}}], 
     LineBox[{{0, 
       38}, {-0.00529626888654552, 38}, {-0.00529626888654552, 39}, {0, 39}}],
      LineBox[{{0, 37}, {-0.006471841261694148, 37}, {-0.006471841261694148, 
       38.5}, {-0.00529626888654552, 38.5}}], 
     LineBox[{{-0.006471841261694148, 37.75}, {-0.29130860959114113`, 
       37.75}, {-0.29130860959114113`, 40}, {0, 40}}], 
     LineBox[{{-0.243665419369327, 21.115692138671875`}, {-0.3385020677179058,
       21.115692138671875`}, {-0.3385020677179058, 
      38.875}, {-0.29130860959114113`, 38.875}}], 
     LineBox[{{0, 
       41}, {-0.016342269685542254`, 41}, {-0.016342269685542254`, 42}, {0, 
       42}}], LineBox[{{-0.3385020677179058, 
      29.995346069335938`}, {-0.43095449868807534`, 
      29.995346069335938`}, {-0.43095449868807534`, 
      41.5}, {-0.016342269685542254`, 41.5}}], 
     LineBox[{{0, 
       43}, {-0.012830381565575004`, 43}, {-0.012830381565575004`, 44}, {0, 
       44}}], LineBox[{{-0.43095449868807534`, 
      35.74767303466797}, {-0.492604148085172, 
      35.74767303466797}, {-0.492604148085172, 43.5}, {-0.012830381565575004`,
       43.5}}]}}, {InsetBox[
     StyleBox["\<\"MG772933.1 Bat SARS-like coron\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0.6, 0.4, 0.2],
      FrontFaceColor->RGBColor[0.6, 0.4, 0.2],
      BackFaceColor->RGBColor[0.6, 0.4, 0.2],
      GraphicsColor->RGBColor[0.6, 0.4, 0.2],
      FontColor->RGBColor[0.6, 0.4, 0.2]], Offset[{4, 0}, {0, 1}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"MG772934.1 Bat SARS-like coron\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0.6, 0.4, 0.2],
      FrontFaceColor->RGBColor[0.6, 0.4, 0.2],
      BackFaceColor->RGBColor[0.6, 0.4, 0.2],
      GraphicsColor->RGBColor[0.6, 0.4, 0.2],
      FontColor->RGBColor[0.6, 0.4, 0.2]], Offset[{4, 0}, {0, 2}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"MN975262.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 3}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN997409.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 4}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN938384.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 5}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN985325.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 6}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN996528.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 7}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN908947.3 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 8}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN988669.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 9}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN988668.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 10}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN996531.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 11}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN996530.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 12}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN996527.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 13}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN996529.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 14}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN994468.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 15}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN988713.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 16}], {-1, 0}], InsetBox[
     StyleBox["\<\"MN994467.1 Wuhan seafood marke\"\>",
      StripOnInput->False,
      LineColor->GrayLevel[0],
      FrontFaceColor->GrayLevel[0],
      BackFaceColor->GrayLevel[0],
      GraphicsColor->GrayLevel[0],
      FontColor->GrayLevel[0]], Offset[{4, 0}, {0, 17}], {-1, 0}], InsetBox[
     StyleBox["\<\"KY417144.1 Bat SARS-like coron\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], Offset[{4, 0}, {0, 18}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"MK211376.1 Coronavirus BtRs-Be\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], Offset[{4, 0}, {0, 19}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY394985.1 SARS coronavirus HS\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 20}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY278488.2 SARS coronavirus BJ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 21}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"EU371559.1 SARS coronavirus ZJ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 22}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY274119.3 Severe acute respir\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 23}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"NC_004718.3 SARS coronavirus, \"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 24}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY502927.1 SARS coronavirus TW\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 25}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY559093.1 SARS coronavirus Si\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 26}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"GU553365.1 SARS coronavirus HK\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 27}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY390556.1 SARS coronavirus GZ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 28}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY394996.1 SARS coronavirus ZS\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 29}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY395003.1 SARS coronavirus ZS\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 30}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"EU371564.1 SARS coronavirus BJ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 31}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"EU371562.1 SARS coronavirus BJ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 32}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY304488.1 SARS coronavirus SZ\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], Offset[{4, 0}, {0, 33}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"KJ473816.1 BtRs-BetaCoV/YN2013\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], Offset[{4, 0}, {0, 34}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"KY417145.1 Bat SARS-like coron\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], Offset[{4, 0}, {0, 35}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"KF294455.1 SARS-related bat co\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], Offset[{4, 0}, {0, 36}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"MF542265.1 Human coronavirus 2\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], Offset[{4, 0}, {0, 37}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"KY983587.1 Human coronavirus 2\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], Offset[{4, 0}, {0, 38}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"KY967357.1 Human coronavirus 2\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], Offset[{4, 0}, {0, 39}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"NC_005831.2 Human Coronavirus \"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], Offset[{4, 0}, {0, 40}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"NC_038294.1 Betacoronavirus En\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 1],
      FrontFaceColor->RGBColor[0, 1, 1],
      BackFaceColor->RGBColor[0, 1, 1],
      GraphicsColor->RGBColor[0, 1, 1],
      FontColor->RGBColor[0, 1, 1]], Offset[{4, 0}, {0, 41}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"NC_019843.3 Middle East respir\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 1],
      FrontFaceColor->RGBColor[0, 1, 1],
      BackFaceColor->RGBColor[0, 1, 1],
      GraphicsColor->RGBColor[0, 1, 1],
      FontColor->RGBColor[0, 1, 1]], Offset[{4, 0}, {0, 42}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"NC_006579.1 Pneumonia virus of\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 1],
      FrontFaceColor->RGBColor[0, 1, 1],
      BackFaceColor->RGBColor[0, 1, 1],
      GraphicsColor->RGBColor[0, 1, 1],
      FontColor->RGBColor[0, 1, 1]], Offset[{4, 0}, {0, 43}], {-1, 0}], 
    InsetBox[
     StyleBox["\<\"AY729016.1 Pneumonia virus of \"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 1],
      FrontFaceColor->RGBColor[0, 1, 1],
      BackFaceColor->RGBColor[0, 1, 1],
      GraphicsColor->RGBColor[0, 1, 1],
      FontColor->RGBColor[0, 1, 1]], Offset[{4, 0}, {0, 44}], {-1, 0}]}},
  ExpressionUUID -> "73b93dbd-19d2-46ce-a17e-b8c28eaf212d",
  AspectRatio->1.5,
  ImageSize->800,
  PlotLabel->"",
  PlotRange->All]], "Output",
 CellChangeTimes->{3.790019856006295*^9, 3.790019922943759*^9, 
  3.790020014340314*^9, 3.790020055936553*^9, 3.790020299118951*^9, 
  3.790020527943535*^9},
 CellLabel->
  "Out[419]=",ExpressionUUID->"cc489670-93b6-4166-a247-6b7f7e970bcb"]
}, Open  ]],

Cell["\<\
So no big surprises here. In particular this is in agreement with various \
analyses that have recently appeared, indicating that the 2019-nCoV has \
greatest similarity to the two bat SARS-like coronavirus with IDs MG772933 \
and MG772934 respectively.\
\>", "Text",
 CellChangeTimes->{{3.790020592921195*^9, 3.790020734363921*^9}, {
   3.7900208333370943`*^9, 3.79002083463763*^9}, 3.7901065729453*^9, {
   3.7901068193660507`*^9, 
   3.790106834909192*^9}},ExpressionUUID->"ea7d6a98-8c87-4291-ab4b-\
1528d601aeb4"],

Cell["\<\
One can of course zoom in on, say, just the 2019-nCoV samples.\
\>", "Text",
 CellChangeTimes->{{3.790020852736362*^9, 3.790020873957796*^9}, 
   3.790106575801646*^9},ExpressionUUID->"c8571679-7c2c-4083-97d9-\
6dce700c982c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PhylogeneticTreePlot\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"vstrings", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "15"}], ";;"}], "]"}], "]"}], ",", 
   RowBox[{"shortnames", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"-", "15"}], ";;"}], "]"}], "]"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1.5"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.790020754788097*^9, 
  3.790020773100505*^9}},ExpressionUUID->"66ead76d-9c06-4fb3-a5c0-\
f8b336e321a9"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[
    0, 1, 0]}, {{}, {
     LineBox[{{0, 
       1}, {-2.466266310947487*^-31, 1}, {-2.466266310947487*^-31, 2}, {0, 
       2}}], LineBox[{{0, 
       3}, {-9.853135150590303*^-35, 3}, {-9.853135150590303*^-35, 4}, {0, 
       4}}], LineBox[{{-2.466266310947487*^-31, 
      1.5}, {-1.6931322616851616`*^-8, 1.5}, {-1.6931322616851616`*^-8, 
      3.5}, {-9.853135150590303*^-35, 3.5}}], 
     LineBox[{{-1.6931322616851616`*^-8, 2.5}, {-0.00017628124601320926`, 
       2.5}, {-0.00017628124601320926`, 5}, {0, 5}}], 
     LineBox[{{-0.00017628124601320926`, 3.75}, {-0.00018813758994710644`, 
       3.75}, {-0.00018813758994710644`, 6}, {0, 6}}], 
     LineBox[{{0, 
       7}, {-0.00029517949511961313`, 7}, {-0.00029517949511961313`, 8}, {0, 
       8}}], LineBox[{{-0.00018813758994710644`, 
      4.875}, {-0.0003564010471758599, 4.875}, {-0.0003564010471758599, 
      7.5}, {-0.00029517949511961313`, 7.5}}], 
     LineBox[{{0, 
       10}, {-0.00011547192890225715`, 10}, {-0.00011547192890225715`, 11}, {
       0, 11}}], 
     LineBox[{{-0.00011547192890225715`, 10.5}, {-0.00011938830548681422`, 
       10.5}, {-0.00011938830548681422`, 12}, {0, 12}}], 
     LineBox[{{0, 9}, {-0.0003678003754874766, 9}, {-0.0003678003754874766, 
       11.25}, {-0.00011938830548681422`, 11.25}}], 
     LineBox[{{-0.0003564010471758599, 6.1875}, {-0.0003727510327019581, 
      6.1875}, {-0.0003727510327019581, 10.125}, {-0.0003678003754874766, 
      10.125}}], 
     LineBox[{{-0.0003727510327019581, 8.15625}, {-0.0008531433100953704, 
       8.15625}, {-0.0008531433100953704, 13}, {0, 13}}], 
     LineBox[{{-0.0008531433100953704, 10.578125}, {-0.0009754045557521157, 
       10.578125}, {-0.0009754045557521157, 14}, {0, 14}}], 
     LineBox[{{-0.0009754045557521157, 12.2890625}, {-0.0011436433759629409`, 
       12.2890625}, {-0.0011436433759629409`, 15}, {0, 15}}]}}, {
    InsetBox["\<\"MN908947.3 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 1}], {-1, 0}], 
    InsetBox["\<\"MN996528.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 2}], {-1, 0}], 
    InsetBox["\<\"MN988668.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 3}], {-1, 0}], 
    InsetBox["\<\"MN988669.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 4}], {-1, 0}], 
    InsetBox["\<\"MN996531.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 5}], {-1, 0}], 
    InsetBox["\<\"MN996530.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 6}], {-1, 0}], 
    InsetBox["\<\"MN996527.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 7}], {-1, 0}], 
    InsetBox["\<\"MN996529.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 8}], {-1, 0}], 
    InsetBox["\<\"MN985325.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 9}], {-1, 0}], 
    InsetBox["\<\"MN997409.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 10}], {-1, 0}], 
    InsetBox["\<\"MN975262.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 11}], {-1, 0}], 
    InsetBox["\<\"MN938384.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 12}], {-1, 0}], 
    InsetBox["\<\"MN994468.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 13}], {-1, 0}], 
    InsetBox["\<\"MN988713.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 14}], {-1, 0}], 
    InsetBox["\<\"MN994467.1 Wuhan seafood marke\"\>", 
     Offset[{4, 0}, {0, 15}], {-1, 0}]}},
  ExpressionUUID -> "17d923cd-053d-4eb5-aa77-3b68ad17ce89",
  AspectRatio->1.5,
  ImageSize->600,
  PlotLabel->"",
  PlotRange->All]], "Output",
 CellChangeTimes->{3.790020776775668*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"bf46d890-f2b1-46a8-8c8f-9039bdda68d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Illustrating in three dimensions", "Subsection",
 CellChangeTimes->{{3.790023900079948*^9, 
  3.790023909064279*^9}},ExpressionUUID->"2dd00b74-8cf4-4d47-b752-\
e8e357e2865a"],

Cell[TextData[{
 "One can create numeric vectors from the genome sequences, and that is in \
fact what ",
 StyleBox["PhylogeneticTreePlot", "Program"],
 " does behind the scenes. I will use essentially the same code as is in the \
definition notebook for that function, in order to provide a different \
illustration of the \[OpenCurlyDoubleQuote]distances\[CloseCurlyDoubleQuote] \
between these viruses. (For brevity I omit it here, but see last section.) \
One can access the code in question by opening the definition notebook with \
the code below."
}], "Text",
 CellChangeTimes->{{3.7900210478978767`*^9, 3.790021189098423*^9}, {
  3.7900861086741734`*^9, 
  3.790086174002804*^9}},ExpressionUUID->"f553b1b3-f0de-419b-b8f5-\
339084d51331"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceObject", "[", "\"\<PhylogeneticTreePlot\>\"", "]"}], "[", 
  "\"\<DefinitionNotebook\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.790021192732095*^9, 
  3.790021215786323*^9}},ExpressionUUID->"a23c4beb-2cea-4630-b6b7-\
83b13a8ed173"],

Cell[BoxData[
 TemplateBox[{
   FrontEndObject[
    LinkObject["dvp57_shm", 3, 1]], 32, 
   "FrontEndObject[LinkObject[\"dvp57_shm\", 3, 1]]", "32", 
   "\"PhylogeneticTreePlot-definition.nb\"", 
   InterpretationBox[
    RowBox[{"CloudObject", "[", 
      TemplateBox[{
       "\"https://www.wolframcloud.com/obj/a692d068-a627-4dc8-a24b-\
fe0da4a01572\"", 
        "https://www.wolframcloud.com/obj/a692d068-a627-4dc8-a24b-\
fe0da4a01572"}, "HyperlinkURL"], "]"}], 
    CloudObject[
    "https://www.wolframcloud.com/obj/a692d068-a627-4dc8-a24b-fe0da4a01572"], 
    SelectWithContents -> True]},
  "NotebookObject"]], "Output",
 CellChangeTimes->{3.7900212289389343`*^9},
 CellLabel->
  "Out[441]=",ExpressionUUID->"55fab184-66e9-4921-b0c2-b9ac7a54777e"]
}, Open  ]],

Cell[TextData[{
 "Using this code I created a set of numeric vectors, each of length 40, for \
the genome sequences. They are stored a ",
 StyleBox["vecs2019nCoV", "Program"],
 " and for convenience of data exploration I include them below."
}], "Text",
 CellChangeTimes->{{3.7900213020385942`*^9, 3.7900213837249107`*^9}, {
  3.7900214299007263`*^9, 3.7900214311653223`*^9}, {3.790021489142336*^9, 
  3.790021550463194*^9}},ExpressionUUID->"2124cbb0-a595-4a7d-b155-\
5a72b4ba3222"],

Cell[BoxData[
 InterpretationBox[
  DynamicModuleBox[{Typeset`open = False}, 
   TemplateBox[{"List", 
     StyleBox[
     "\"vecs2019nCoV definition\"", "IconizedCustomName", StripOnInput -> 
      False], 
     GridBox[{{
        RowBox[{
          TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["List", "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox[
           RowBox[{"{", 
             RowBox[{"44", ",", "41"}], "}"}], "IconizedItem"]}]}, {
        RowBox[{
          TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
          TagBox["46176", "IconizedItem"]}]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
     Dynamic[Typeset`open]},
    "IconizedObject"],
   ExpressionUUID -> "549decef-2ff5-4786-af4f-248a18d0ba03"],
  CompressedData["
1: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
  "],
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7900216262092953`*^9, 3.790021651008206*^9}},
 CellLabel->
  "Out[446]=",ExpressionUUID->"3a495363-b497-4ef4-a586-270d019a9f36"],

Cell["\<\
Now we can use dimension reduction to place these in three dimensions, in a \
way that attempts to retain approximate distances between all pairs (this is \
the point of dimension reduction).\
\>", "Text",
 CellChangeTimes->{{3.7900217519538*^9, 
  3.790021820421022*^9}},ExpressionUUID->"055a9cb3-ce3c-4a2b-827f-\
aa724208b3fa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"styled", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Style", ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DimensionReduce", "[", 
         RowBox[{"vecsCOV", ",", "3", ",", 
          RowBox[{"Method", "\[Rule]", "\"\<LatentSemanticAnalysis\>\""}]}], 
         "]"}], ",", "colors"}], "}"}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"styled", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.789765310726927*^9, 3.789765381436596*^9}, 
   3.78976613175539*^9, {3.789766189333296*^9, 3.789766193586979*^9}, {
   3.789766330293071*^9, 3.789766355661932*^9}, {3.789766426575581*^9, 
   3.7897664310625753`*^9}, {3.789814745392064*^9, 3.789814767898898*^9}, {
   3.789814844783152*^9, 3.789814847188581*^9}, 3.7900217444308987`*^9, {
   3.790021927925633*^9, 3.790021932707624*^9}, {3.7900221539916677`*^9, 
   3.79002219233004*^9}},ExpressionUUID->"a0271cba-d021-42bf-b8ed-\
c4478bc9b8c8"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     NCache[
      Rational[7, 360], 0.019444444444444445`]], 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{3.197788989100868, 0.046034051372971355`, 
      0.008776932525816045}]}, 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{3.198130717890341, 0.046427109711960186`, 
      0.013269574915100002`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      3.1128560089912765`, -0.1679901648929541, -0.011957540693852908`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      3.118243058999151, -0.1560322959551343, -0.030874345746144394`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      3.117928119947419, -0.1775632977720033, -0.026188556405900842`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      3.1622726446599416`, -0.1273410957019951, -0.018839870380142565`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      3.1120714591813035`, -0.1748479502588955, -0.007993193260024678}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1313085630863164`, -0.24239073307015052`, -0.005630882016476657}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1305088163921826`, -0.24315566394901492`, -0.005040346661679462}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1406189521760117`, -0.2415705440635465, -0.005035573916491148}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.129504508705898, -0.24446470799354275`, -0.0018518624339681489`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{3.132591942804191, -0.23840599575747595`, 
      0.0023617361411172877`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1293301684898025`, -0.2454513466870386, -0.002255844606797175}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1299538311269313`, -0.24498030407509236`, -0.0027575447033666434`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.128747678915223, -0.24564358563711436`, -0.0035875837231105767`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1348370472765814`, -0.2398382244199658, -0.004630872011658127}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1281010866308403`, -0.24421407987401983`, -0.002831829587567891}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1395556146413384`, -0.2415417463157341, -0.003924736846645294}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1274997766752666`, -0.24635529056186292`, -0.0007903645824337557}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.1272907839938644`, -0.24541670209294597`, -0.004252850412732656}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      3.128747678915223, -0.24564358563711436`, -0.0035875837231106045`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{3.12606874771125, 
      0.15175167447342333`, -0.15101374950147717`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{3.1087164349738137`, 
      0.12687473034197805`, -0.22264764706806892`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{3.0988765409359296`, 
      0.12773402905116987`, -0.22313678717349494`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{3.099706098336182, 
      0.1273775607731562, -0.2244616610700885}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{3.150683721440077, 0.07385005852044516, 
      0.5655350855911166}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{3.1613581492701743`, 0.07478262037845443, 
      0.5538157002708721}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{3.0548039897542134`, 
      0.043530675880431566`, -0.12062173222865669`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{3.071017603834454, 
      0.04252432819529065, -0.12106610981184926`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2118545603770357`, 0.2177857590827108, 
      0.002996891580657579}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2123522344392965`, 0.21839090910656805`, 
      0.0025466163655410157`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.212165988893724, 0.2181730959854791, 
      0.002013525980551545}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.212209116640304, 0.21810423929887296`, 
      0.0027666358071480046`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.212587764888531, 0.21689951670841406`, 
      0.0033472685732352236`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2117951912705736`, 0.2177669302334273, 
      0.002937148048880789}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2126939695169656`, 0.2180908207474051, 
      0.0032495332979660674`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2122727018373114`, 0.21810320352750845`, 
      0.0007513393559430148}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2124618556436544`, 0.218263082482112, 
      0.002318995201201518}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2117951912705736`, 0.2177669302334273, 
      0.002937148048880789}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2114448603256087`, 0.21802121790898824`, 
      0.002535582115599122}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.211854560377035, 0.2177857590827108, 
      0.002996891580657607}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.211540269829295, 0.21771117804523643`, 
      0.0019791120744838964`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.21166657973368, 0.21787563611974017`, 
      0.0032913430693944923`}]}, 
    {GrayLevel[0], 
     Point3DBox[{3.2118224253675507`, 0.21726677646516712`, 
      0.002383513316786323}]}}, {}, {}},
  ExpressionUUID -> "6648a7b4-bb2e-42be-97e6-c518788e4673",
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{367.1259006232096, 236.20180809580597`},
  ImageSizeRaw->Automatic,
  PlotRange->{All, All, All},
  PlotRangePadding->{{0, 0}, {0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.12357708053428, -0.2880848654401036, 1.2689654574752227`},
  ViewVertical->{0.09865402179686204, -0.032411823094531556`, 
   0.9945938154377358}]], "Output",
 CellChangeTimes->{3.790022172201062*^9},
 CellLabel->
  "Out[462]=",ExpressionUUID->"020f4eca-c7e3-4af3-9ee9-37c8222f0a1b"]
}, Open  ]],

Cell["\<\
The (clustered) two brown points, as expected, are closest to the black \
2019-nCoV cluster.  the \[OpenCurlyDoubleQuote]TSNE\[CloseCurlyDoubleQuote] \
method shows a somewhat different picture however.\
\>", "Text",
 CellChangeTimes->{{3.790021909892964*^9, 3.790021974981037*^9}, {
   3.790022020885962*^9, 3.790022040046898*^9}, {3.790022211072432*^9, 
   3.790022224616836*^9}, 
   3.7901065806215553`*^9},ExpressionUUID->"ed788b57-500a-40e2-9415-\
72dbeeeecccd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"styled", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Style", ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"DimensionReduce", "[", 
         RowBox[{
          StyleBox["vecs2019nCoV", "Program"], ",", "3", ",", 
          RowBox[{"Method", "\[Rule]", "\"\<TSNE\>\""}]}], "]"}], ",", 
        "colors"}], "}"}], "]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPointPlot3D", "[", "styled", "]"}]}], "Input",
 CellChangeTimes->{{3.790021875748259*^9, 3.790021876444705*^9}, {
  3.790022092711771*^9, 
  3.7900220993121843`*^9}},ExpressionUUID->"2024415b-1668-4ea6-8e84-\
3be545babf11"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     NCache[
      Rational[7, 360], 0.019444444444444445`]], 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{-12.001709938049316`, 35.884368896484375`, 
      35.809593200683594`}]}, 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{-13.257790565490723`, 29.24921226501465, 
      30.37450408935547}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      74.0798110961914, -30.430635452270508`, -28.201948165893555`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{77.95822143554688, -15.92098617553711, -39.03281021118164}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      84.5899658203125, -23.155424118041992`, -47.90598678588867}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      81.50839233398438, -17.460735321044922`, -61.7935676574707}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{
      76.09769439697266, -32.90410614013672, -38.795345306396484`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{57.03448486328125, -40.06486511230469, -58.12249755859375}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      45.4294548034668, -35.409934997558594`, -48.44948196411133}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{56.76865768432617, -42.24040222167969, -41.46809005737305}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{38.9032096862793, -44.07054138183594, -60.99675369262695}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      30.704984664916992`, -29.4107608795166, -55.411067962646484`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      41.61567306518555, -18.991146087646484`, -49.640296936035156`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      35.075984954833984`, -27.630298614501953`, -38.721920013427734`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      31.461048126220703`, -41.49193572998047, -46.683311462402344`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{45.77742385864258, -35.3692626953125, -30.27454376220703}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      53.0200080871582, -25.657594680786133`, -39.384376525878906`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      47.80879211425781, -51.43670654296875, -50.955631256103516`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      40.7706413269043, -48.209503173828125`, -37.338829040527344`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      44.19096755981445, -29.562192916870117`, -63.85826110839844}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{55.21907043457031, -24.5130615234375, -54.46123123168945}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-56.20066452026367, 43.15693664550781, 6.873960971832275}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-48.2614860534668, 50.496620178222656`, -5.97303581237793}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-51.116943359375, 40.95745849609375, -9.079829216003418}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-42.166954040527344`, 
      42.232460021972656`, -4.027618408203125}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-7.848356246948242, 8.879287719726562, -20.437744140625}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-12.788394927978516`, 
      2.6470720767974854`, -18.964874267578125`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{6.547832012176514, -18.190563201904297`, 
      19.01581573486328}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{11.482336044311523`, -11.8539457321167, 
      19.684438705444336`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-68.34635925292969, 21.43239402770996, 56.25247573852539}]}, 
    {GrayLevel[0], 
     Point3DBox[{-40.723758697509766`, 38.22117614746094, 
      57.40056610107422}]}, 
    {GrayLevel[0], 
     Point3DBox[{-55.74372100830078, 41.73676300048828, 50.14744567871094}]}, 
    {GrayLevel[0], 
     Point3DBox[{-37.625919342041016`, 23.53990936279297, 
      52.58570098876953}]}, 
    {GrayLevel[0], 
     Point3DBox[{-59.3353385925293, 26.040433883666992`, 71.41851806640625}]}, 
    {GrayLevel[0], 
     Point3DBox[{-42.21067810058594, 24.405961990356445`, 
      68.46342468261719}]}, 
    {GrayLevel[0], 
     Point3DBox[{-66.75401306152344, 35.3516845703125, 59.609317779541016`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-43.9996223449707, 10.394118309020996`, 
      54.944358825683594`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-52.18525695800781, 25.8011417388916, 56.83300018310547}]}, 
    {GrayLevel[0], 
     Point3DBox[{-49.69794464111328, 18.8836669921875, 42.5053825378418}]}, 
    {GrayLevel[0], 
     Point3DBox[{-45.93935012817383, 32.612152099609375`, 
      42.391292572021484`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-61.972076416015625`, 28.47157859802246, 
      43.331451416015625`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-60.06288528442383, 11.185709953308105`, 
      49.369449615478516`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-55.383880615234375`, 12.569500923156738`, 
      65.89483642578125}]}, 
    {GrayLevel[0], 
     Point3DBox[{-52.42161178588867, 39.82501220703125, 
      67.07343292236328}]}}, {}, {}},
  ExpressionUUID -> "2ea8d373-8ffb-4026-bc11-434be3ad63db",
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{419.3746268880304, 230.22546602074678`},
  ImageSizeRaw->Automatic,
  PlotRange->{{-68.34635925292969, 84.5899658203125}, {-51.43670654296875, 
    50.496620178222656`}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.7713780077884673`, -2.8828472356774353`, 
   0.037573518205417544`},
  ViewVertical->{-0.25379747390310425`, -0.1798788840895563, 
   0.9503843587197228}]], "Output",
 CellChangeTimes->{3.790021881973434*^9, 3.790022101808692*^9, 
  3.790022238167557*^9},
 CellLabel->
  "Out[467]=",ExpressionUUID->"ef7db084-41af-4b07-b681-2a4b5ade7e7f"]
}, Open  ]],

Cell[TextData[{
 "I am somewhat partial to a method not built into ",
 StyleBox["DimensionReduce", "Program"],
 ", known as Multidimensional Scaling. So partial, in fact, that I put it \
into the WFR."
}], "Text",
 CellChangeTimes->{{3.7900220615901747`*^9, 3.7900220785996323`*^9}, {
  3.790022320889762*^9, 
  3.790022347531351*^9}},ExpressionUUID->"c0c98c72-a739-40c5-8496-\
da91da8fbc17"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"styled", "=", 
   RowBox[{"Apply", "[", 
    RowBox[{"Style", ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<MultidimensionalScaling\>\"", "]"}], 
         "[", 
         RowBox[{"vecsCOV", ",", "3"}], "]"}], ",", "colors"}], "}"}], "]"}], 
     ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPointPlot3D", "[", "styled", "]"}]}], "Input",
 CellChangeTimes->{{3.789937243145217*^9, 
  3.789937268568161*^9}},ExpressionUUID->"561530d1-288a-47f0-846b-\
e12b1c63bd4e"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0.3315753, 0.4561011, 0.6388182], PointSize[
     NCache[
      Rational[7, 360], 0.019444444444444445`]], 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{-0.05415067082626813, -0.010858342707426734`, 
      0.005641676941494805}]}, 
    {RGBColor[0.6, 0.4, 0.2], 
     Point3DBox[{-0.05418961854513872, -0.009091853874418519, 
      0.02265739774377817}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{0.17060934031797156`, 
      0.0026629564263406643`, -0.02424806489904627}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{0.15850525213379155`, 
      0.02469253408053128, -0.018955830643824747`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{0.17933625142852092`, 
      0.014423793955575684`, -0.030990995054952442`}]}, 
    {RGBColor[1, 0, 0], 
     Point3DBox[{0.12330924375093123`, 
      0.014074527279399209`, -0.0038455428648994164`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24050860013099057`, -0.015001731454025486`, -0.042702194669566804`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.2413672031367486, -0.015732108185016233`, -0.04311940786905399}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.2382246388898958, -0.01729003257474565, -0.04500315877197718}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.2428772167537882, -0.017223205376206033`, -0.03828466615680669}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.23634293368449535`, -0.021738843227328802`, -0.038066731856026985`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24377640059628639`, -0.01830219925427161, -0.042164800773381736`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24322565993182035`, -0.01773715171257793, -0.04194284524778676}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24274848158149112`, -0.017560284035484184`, -0.042185904092225814`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.238307829151814, -0.0185462461051347, -0.045362633801546426`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24502527809576619`, -0.018190839632517632`, -0.038157962207523585`}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.24410556022569743`, -0.01573098423944519, -0.0414561699801228}]}, 
    {RGBColor[0, 0, 1], 
     Point3DBox[{
      0.2440799661487453, -0.016853436405638935`, -0.04220370900657341}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-0.13948132560396181`, 0.23137451222712563`, 
      0.1674159361009585}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{
      0.2440799661487453, -0.016853436405638945`, -0.042203709006573435`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-0.11014870931442193`, 0.31883172391972775`, 
      0.19503013189102142`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-0.10940757794196383`, 0.32138969895886715`, 
      0.19799586247606532`}]}, 
    {RGBColor[0, 1, 0], 
     Point3DBox[{-0.1091693082352983, 0.32257371139010077`, 
      0.19764337766652246`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-0.07334169079088422, -0.4256442962397354, 
      0.4579544583006233}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-0.07592898281860232, -0.4181630692247318, 
      0.44723611521838463`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{
      0.23737678801568898`, -0.01701933384813641, -0.044558383688599594`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{0.17758551030729613`, 
      0.0007410504121547734, -0.01792242450939159}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-0.019736669223680777`, 0.21942430780773814`, 
      0.20466815052452625`}]}, 
    {RGBColor[0, 1, 1], 
     Point3DBox[{-0.02115736992966381, 0.21867916337516902`, 
      0.20520749648590714`}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22822154431794792`, -0.03926594365610517, \
-0.09480557468690402}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22886803707301973`, -0.03856038323981354, \
-0.09414073267397632}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22861303612486403`, -0.037984738315977054`, \
-0.09415358513367984}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22856932171864655`, -0.038810978032632955`, \
-0.09419580045053332}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.2274563599102915, -0.03964938761879004, \
-0.09461062088659936}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22819377023237017`, -0.03921422881928572, \
-0.09484950722656713}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22862809607698548`, -0.039268962785917745`, \
-0.09395922925281879}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22854069741336255`, -0.03680952569327395, \
-0.09459089550127871}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.2287507086653457, -0.03830275233984167, \
-0.09407280736390121}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22819377023237017`, -0.03921422881928571, \
-0.0948495072265671}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.2283725650250652, -0.0386314689777432, \
-0.09455499682746471}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22822154431794792`, -0.039265943656105196`, \
-0.09480557468690402}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22807221521085994`, -0.03811836572008142, \
-0.094727551704497}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22828738009370844`, -0.039594822480375144`, \
-0.0949083205785705}]}, 
    {GrayLevel[0], 
     Point3DBox[{-0.22769115078781493`, -0.03863885517502201, \
-0.09485076404913985}]}}, {}, {}},
  ExpressionUUID -> "4a877dc5-f33c-40dd-b043-800ac2bd632c",
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{377.85669383593506`, 306.792042435141},
  ImageSizeRaw->Automatic,
  PlotRange->{{-0.22886803707301973`, 
    0.24502527809576619`}, {-0.4256442962397354, 0.32257371139010077`}, 
    Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.937097688567303, -1.683508478922376, 2.2053235015171095`},
  ViewVertical->{0.01223685037770392, 0.03285191040585388, 
   0.9993853168200538}]], "Output",
 CellChangeTimes->{
  3.7899372717222958`*^9, 3.789937365282325*^9, 3.7900047892869997`*^9, {
   3.790004827209196*^9, 3.790004841632187*^9}},
 CellLabel->
  "Out[213]=",ExpressionUUID->"0cb96436-d54d-4b64-8a4f-df6aa6833e46"]
}, Open  ]],

Cell["\<\
This gave a plot that is not too different from the latent semantic analysis \
method. The Properties and Relations section of the definition notebook gives \
an indication of why they are similar (in brief: both are based on the \
Singular Values Decomposition from linear algebra).\
\>", "Text",
 CellChangeTimes->{{3.7900223799147377`*^9, 3.7900224822562237`*^9}, 
   3.790087659863536*^9},ExpressionUUID->"29b3286a-86b9-4e43-a92e-\
094e9e8d5087"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Locating possible \[OpenCurlyDoubleQuote]hot spots\
\[CloseCurlyDoubleQuote] on a genome sequence", "Section",
 CellChangeTimes->{{3.790023155013384*^9, 
  3.790023188869671*^9}},ExpressionUUID->"f0f7cb3f-b5b1-467f-9115-\
1ad31f7ae76a"],

Cell["\<\
This section is, uhm, on the \[OpenCurlyDoubleQuote]tentative\
\[CloseCurlyDoubleQuote] side. I simply lack the genetics background to \
assert that the following analysis carries much meaning from a biological \
point of view. But it does show tools that can be deployed regardless. \
(Strictly speaking, I also am lacking in genetic expertise for the preceding \
genome comparison section, but there at least I have the benefit of having \
developed tools and tested them on several benchmark data sets.)\
\>", "Text",
 CellChangeTimes->{{3.790023223735021*^9, 
  3.790023423578779*^9}},ExpressionUUID->"52f7d786-138e-471e-a99f-\
5245a68c0bc6"],

Cell["\<\
The idea we pursue is as follows. It is known that coding sections (exons) of \
genomes correlate heavily with a periodicity of three. Of course this forces \
the question of how to gauge periodicity. It turns out that several methods \
are available for this purpose. I will show two, and we will see that they \
are in rough agreement. It should be noted that these are crude and, at best, \
accurate to tens of nucleotides. With emphasis on \[OpenCurlyDoubleQuote]at \
best\[CloseCurlyDoubleQuote]. For both methods we need to form a signal from \
a genome sequence. One method is fairly well known and allows us to apply \
basic Fourier methods to get a frequency, from which we can then derive a \
period. Of course there can be multiple large frequencies, and corresponding \
periodicities. But the length three period, when it appears, is dominant, and \
we will use that to advantage.\
\>", "Text",
 CellChangeTimes->{{3.790023428836402*^9, 
  3.790023746078517*^9}},ExpressionUUID->"05bb8805-3ec9-4a33-b7ee-\
08325c08e242"],

Cell["\<\
We illustrate with the first of the 2019-nCoV genomes in our list.\
\>", "Text",
 CellChangeTimes->{{3.79002398423307*^9, 3.790024005209605*^9}, {
   3.790024165115715*^9, 3.7900241997976017`*^9}, 
   3.790106589703124*^9},ExpressionUUID->"3cf463bc-a521-4b30-bd22-\
9fa665c1f17b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"virus", "=", 
   RowBox[{"vstrings", "[", 
    RowBox[{"[", 
     RowBox[{"-", "15"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.790024020306629*^9, 3.790024025665708*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"d3554086-b8b5-45b9-9d5d-05a83876b4a0"],

Cell["\<\
 In order to localize \[OpenCurlyDoubleQuote]hot\[CloseCurlyDoubleQuote] \
areas (that is, regions that show the three-periodicity), we will segment \
into overlapping substrings of length 500, with a spacing of 100. When we \
locate substrings of interest we will merge any that have centers falling \
strictly within the range of prior substrings of interest.\
\>", "Text",
 CellChangeTimes->{{3.7900242098432493`*^9, 
  3.790024298992899*^9}},ExpressionUUID->"b5015cff-1830-4221-805c-\
23903f8585c1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sublength", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vsubstrings", "=", 
   RowBox[{"StringPartition", "[", 
    RowBox[{"virus", ",", "sublength", ",", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"sublength", "/", "5"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7900243729146023`*^9, 3.7900243842304573`*^9}, {
  3.790024423744928*^9, 3.79002442785537*^9}},
 CellLabel->
  "In[474]:=",ExpressionUUID->"839aa51f-37b5-4890-8d40-1fb86edfad9e"],

Cell[CellGroupData[{

Cell["\<\
Method 1: construct sequences in 3D and compute the Fourier spectra\
\>", "Subsection",
 CellChangeTimes->{{3.79002378368626*^9, 3.79002378695093*^9}, {
  3.790023938672411*^9, 
  3.790023972040873*^9}},ExpressionUUID->"f8cbebe5-8029-4bf3-ac0e-\
1fcf9662ef5f"],

Cell[TextData[{
 "The idea is to regard each of the four nucleotides as occupying a vertex of \
a regular tetrahedron centered at the origin. So each gets associated to a \
point in 3-space. The array of three dimensional values thus created can then \
be analyzed for frequency information using ",
 StyleBox["Fourier", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.790024045041882*^9, 
  3.790024147372245*^9}},ExpressionUUID->"725c05b7-e705-49ff-a197-\
f1ada9ea0cc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tetverts", "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "/", "2"}], ",", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], "-", 
         RowBox[{"1", "/", "2"}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"repRule", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<A\>\"", ",", "\"\<T\>\"", ",", "\"\<C\>\"", ",", "\"\<G\>\""}], 
      "}"}], "->", "tetverts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"viralseqs", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Characters", "[", "#", "]"}], "/.", "repRule"}], "/.", 
        RowBox[{"_String", "\[Rule]", "Nothing"}]}], "]"}], "&"}], ",", 
     "vsubstrings"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7896646749472218`*^9, 3.789664723065125*^9}, {
   3.789665494965171*^9, 3.7896655793413563`*^9}, {3.789665641087237*^9, 
   3.789665677494494*^9}, {3.789665713492868*^9, 3.7896657418166523`*^9}, 
   3.790024591940083*^9},
 CellLabel->
  "In[477]:=",ExpressionUUID->"9c39a47e-6c16-4aa6-9c60-86f1416409ec"],

Cell["\<\
We get the three Fourier sequences for each of these substrings.\
\>", "Text",
 CellChangeTimes->{{3.790024603041473*^9, 
  3.790024629482191*^9}},ExpressionUUID->"2dc8c948-1b20-4245-a089-\
4c2c3a6ee8ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fts", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Fourier", ",", "viralseqs", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.790024464895577*^9, 3.790024467999872*^9}, {
  3.790024506832527*^9, 3.7900245082327347`*^9}, {3.790024738948183*^9, 
  3.7900247423327312`*^9}},
 CellLabel->
  "In[480]:=",ExpressionUUID->"5aea51ce-cba6-4961-a88b-27722ae1472c"],

Cell["\<\
Now sum absolute values for the three sequences (one per dimension) obtained \
from each substring. We remove the first components to avoid an artificially \
high DC component.\
\>", "Text",
 CellChangeTimes->{{3.790024828548726*^9, 
  3.790024886086999*^9}},ExpressionUUID->"d49dcac3-2c7b-4a90-a9b6-\
c61336938ac3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vals", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Abs", "[", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"2", ";;"}]}], "]"}], "]"}], "]"}], "]"}], "&"}], ",", 
     "fts"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.790024464895577*^9, 3.790024467999872*^9}, {
   3.790024506832527*^9, 3.7900245082327347`*^9}, {3.790024738948183*^9, 
   3.7900247423327312`*^9}, {3.7900247781961823`*^9, 3.790024819728218*^9}, 
   3.790024881302433*^9, {3.790025292912586*^9, 
   3.7900253073577423`*^9}},ExpressionUUID->"1c47d4db-8d6d-47f4-bf58-\
f5ab2d9e7694"],

Cell[TextData[{
 "It might be instructive to see some of the plots these produce. Those with \
clear three-periodicities will be seen to have spikes at 1/3 and 2/3 distance \
along the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "b43e7654-d6b7-4f1a-a320-dcf3954a8c50"],
 " axis."
}], "Text",
 CellChangeTimes->{{3.7900249052777042`*^9, 
  3.79002496979049*^9}},ExpressionUUID->"b64cd25a-0ace-4cce-abd7-\
0140acbbb37e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"vals", "[", 
      RowBox[{"[", "j", "]"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.790024464895577*^9, 3.790024467999872*^9}, {
  3.790024506832527*^9, 3.7900245082327347`*^9}, {3.790024738948183*^9, 
  3.7900247423327312`*^9}, {3.7900247781961823`*^9, 3.790024819728218*^9}, {
  3.790024893461878*^9, 3.790024894102242*^9}, {3.7900249838002768`*^9, 
  3.790024994135563*^9}},ExpressionUUID->"267c0137-8b14-4aaa-bc09-\
2742b8e0516b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
9fXU/hnwjRefbTrS4s26OwNeF9MfLzRQ/8tE8KIbfR9nElmWCe/v1vVrOEDz
eSZGXmwxxbKU3j8T6xsSfby+oPkxE4s+/W3YmBs15P6Z2BC2s1IZR+MtEzfa
LNlVHUfi152JoP0Gr8ECjd8s/Hypw4EHd0l9kWVBrXryVNmN7I8s1HUTY9Ku
Xif6sxDvt29+m+nke3sWhmivqKPK6P2zcHxs14sdAoksZuF5pXZj7U7ynu4s
+OX0WP5Ve9qfZONJU3O7ZbT+yLJxoHbViKIi4t/IRus79evSk0n+Umaj+e7e
W0KiyP72bOx2n5i470Piv45sbL/4mVH0JvVVzMaS5p4uqQ5yXnc2+o7dUHGn
BbV/DjaJS861CyX2leWgkybea4eH1vMcKH/5sc3SW3eJ/hzsbDuv/YjRtD7k
YEuz3dt/lxH/ceRgoCY4MngiOb+YA7erXhz9ATm/OwdDlm0Vnq6k9SMXV7JM
Qy5foPGfi4PyWq+OLvKeyMX6URFjUpbR++diYn4bR5CR9mu5aDr76PywGnIe
Ry7E4VmHB4cTWcyFfxPvKQPzaPzlQnburLL5C9of5eGDWaX+z7+n75+Hdp3f
SUwwEv9BHsbYUgKWFpHzKfPQfcL6+qZDab+Vhy5/nG7VMqya6M+DUNXp13nZ
tF/KQ+Lxe80+T6L2z0PVeXfcuCpa//MR3F9+9Mlc6v/5GP9CWuWdTu2fj0F4
ueanMnr/fMw+E/RrUgjNv/lwjegh3bGd2NORj+gfJRO+3EX7hXzMc1UHq/yI
Pnc+pjSYHNLp9P4FqC1N6RSsIfEhK8C8/dEtN3Sg+bcAlV2iMmX7af4tQKRJ
f35XAuk/7QX4LE911HcN0ecoQINn78K0Rqq/AMtX93w2yJvGXwFS4netM3ag
/fNULNm08zPpA+r/r2X5kPadPqf5Zyo6qLtsOXKWvJ9yKp6+X/Rw1GKaf6ci
qFRxz3aI+JtjKiq3nTRH1dH4n4rG+F8rp2dR/a/3qzp4SdqF1p9CbE8btsgx
gdq/EBtO2S9fG0r6ExTCa/GMtZs/Jf2ishB9f9qaN2UT9b9ClPSvnTNpNfW/
Qng/3p60fx/N/4UIiAgZtPkL4i/uQnzyVeSaRA31/yIYApb/nHuW+IusCCse
T1/tP4LWnyLo2HVlEf+9vQhB7P6Oorf0F0HDns9dhGD2/BIBEvZ+UgHfsfeX
Cbx95AJvPwh4ztpXIfD2Vwroxb6PILz1fgK82fctF7CIfX+HwPuHU+D9RxTw
DetfLgGNrP+5BQxj/dMjYDTrvxI1nKx/S9WYw/q/TI2nbHzI1VCy8QM1vmTj
S6FGDBt/SjV+YeNTUGMWF79qhLLxXa7GODb+HWr0ZfODU83nD1GNeDa/uNR8
/nGr0Z3NTx41urH5S1KMKDa/SYv5/Ccrhj+bH+XFfP7Ea5nNr4piHGLzr7IY
zdj8LBQjnsvfxXx+Ly/GATb/O4rxB1sfnMV8/RCL+friKkYoW3/cxXx98hTz
9UuiQSpb36Qa+LD1T6bBFrY+yjV8/YQGS9n6qtDAydZfpQb/ZuuzoHmrfmv4
+l6uwT62/js0qGX7A6cGXdn+QdTw/YVLw/cfbg0Gs/2JR4MEtn+RlOAJ299I
SyCw/Y+sBMfY/khegg/Z/gklcLP9laIEm9j+S1mCxWx/JpS81b+VYBTb35WX
QMr2f44ShLD9obMEzdj+USzh+0tXCfax/ae7hO9PPSVoy/avEi3f30q1fP8r
0+JLtj+Wa2Fm+2do+f5aocVZtv9WalHB9ueCFr24/l2LW2x/X659ne+Z/t+h
xRN2PnBq+flB1OIGO1+4tChn5w+3lp9PPFqsZOcXiQ52dr6R6tCWnX9kOviy
85Fch2R2foIOgex8pdDx85dShxh2PhN0SOLmNx0/35Xr+PnPocNqdj506vj5
UdTha3a+dOn4+dOtQ292PvXoMJCdXyV6ZLHzrVTPz78yPcLY+Viu5+dn6LGS
na8VevzNzt9KPX5i53NBjzns/G7X4zg735frMY6d/x16Hh9w6nn8QNTz+IJL
jzUs/uDW4xyLT3j0aODwCwOPb0gNPP4hM/D4iNyA5yx+AgMCWHxFYYCCxV+U
BiSw+IxgwC0Wv7EbkMfiO+UGHv9xGHh8yGng8SPRgH+x+JLLgG9Z/MltwAEW
n/IY3sKvjAhh8S2pEXIW/5IZeXxMbuTxMxh5fE1h5PE3pRErWHxOMPL4nd3I
43vlRoxh8T+HEUdYfNBpRB6LH4pGTGfxRZeRxx/dRh6f9BjxjMMvTUhh8U2p
CSoW/5SZcJfFR+UmHj+FicdXFSYef1WaeHxWMOECi9/aTXCx+G65CX+x+K/D
hN0sPuw0IY7Fj0UTDrD4ssuEYyz+7DbhCotPe0xv4ddmBLH4ttTM498yM2JZ
fFxuhj+Ln8OMpyy+rjDz+LvSjFksPi+Yefzebsb3LL5fbkYdi/87zDw/4DSj
G8sfiGaeX3CZef7Bbeb5CY/5Lf7CAjXLb0gtPP8hs6CK5UfkFrRm+RNY4MXy
KwoLMln+RWmBN8vPCBaev7Fb8JDld8otqGb5H4eF54ecFhSz/JFo4fkll4Xn
n9wWnp/yWHCD46+sPL8lteIblv+SWVHL8mNyKypZ/gxW6Fh+TWHl+TelFXNY
fk6woiPL39mtPL9XbsW7LP/nsOIwyw86rZjK8oeiFQtZftFlRSTLP7qtPD/p
sb7FX9p4flNq4/lPmY3nR+U2SFj+FDbUsPyqwsbzr0obPCw/K9iQzPK3dht8
WX633IYXLP/rsPH8sNOGNJY/Fm14l+WXXTZEsPyz24YuLD/tsUHO8delPL8t
LQXHf8tK8fvou9n+4a/C/geiQLGe
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "1d9dac3b-8717-4c84-b820-52dee7022c0d",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.167335193356198}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "052667ee-ebc6-487a-bba3-a33b98a0b055",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.871003605475322}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Qsby29JM9GL5b1km9tYb//RYq7uj/wu5TtOs
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "239c8ced-c8cd-4293-9991-37db615bf0ba",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 4.249299717692663}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw9VQlUk1cWjmxuDChWoBQhuGDqQisEtwL5iCgNAmULeyALiLSCGCtM8VR/
HQTsoGCtOFSskQFpK44wiGyd9metpbZaipI5VaQIIhoEQSyireMc72vOycn5
crfv3ve9+5zU20MSjQQCQdmL7/9/X35GJVOvSn4t63gioT9grE+fWZHK8Awc
W5jyzZp9jwjPwerqzw+1VDP7K0j9ekae//AYYVuMX/dVm5X+Rtge1h9p7/7z
d2YXomqBx+YL3o8JL4Rt92C5u9YIL/FiNM0TGeyrpxF2RnSe1SbD36bIX4RJ
p4HM9+8xPsuQteeDr+ZZMv8V0I9kWFbUM34u+LbbbfmY7QThN5Ezq0TR+3cW
vwqtR8pLlj77nbArRGXZpZd2s3pu8M/aUjrszuLFkAo+VlxuYfndcTl/Immq
gtlXQ9pyrkdXzeLX4MKpxKl1IobXomdnlca3xkB4HbT/bRsptmP29ZC2192Z
NV9A/byFB7k3LG65sv488PmQybNa3TPy94SJ/aLd6aNsnl4IHJ3KtXZi/Ugg
Xrny7lDrH4SBhb03XS7UEn8OKLu0c47rUVbPGyXqAguL18mf84bIce/JJ9lP
KV6KlCtjMTkpfWSXItKxMeWrNMZvA5pifUTlXiz/Blyd0/Pc9iTrzwdZbtvO
zvuCMOcDL9HTpFIvxncjHHpSPk3qnyT7RmTJb521aWDxm3DsuxvZ7gfNXtbj
NqHz+Wx93AxW3xe/jT+UWbUZk90Xw4mtNmXXGP+3kVrV7Wv3Lp0/9zauZ28/
Glj0nOwyOOf97CF3JP1yL7Dn1vpiYzZfP1iGDo6dHKF6nB+aZeEmwX/qczMG
9IamidN0PtxmqC7N7XfWsPPyR3HXGUOiFbP7Q24qrqy3GyR7AO6c2sortaQn
LgAXzvtPN1/K+gvEl/HGn+2oY/UDYXnOeIV0wTjFv4NNJc/PN7gT5t5B40PJ
is9y2PkHocAzc1qAJ80XQTAs8R2y6WP5gtAW1Fk/6GL0EvNBCPz4o/Xnulh8
MJxT/fLHq2keCIarT7rhQSWrFwz0nLC3Xkz5+GAY3awYur2L3Y8QvN4ouNv2
M+kNIbgx+7XkRVZs3iEoLN7pzf9I+fkQrNkj3K+IZfGhsDWWZ5VvJH+EQnBi
i8CxnfhyL+xno/bJhHS/+FA0njnXf7WC8Q/Dq3nbDvS1sfphONSUmRzkP0z1
wyDy2ZDj9gXpgQ9Du8PMA5XmTB9yxMuapTjE4uUIq7nO95mz+nKcUS2ZmXuL
9MDLsUzfeUS7iuknHPczB7mOUKqHcEgMFw8Eu5hQfDj8LDyPO45Tv3w4lpeo
ATPyF0Tg9NHDUU1drH4Eug/alYYpRol/BMwKPolbNEH98hGQNgWkyS4y/UVC
mmGx5fwzFv8Cqypt/rGeMBeJomhdS2TxQ4qPxBVzO96E5RdE4ZFXi4PXfeoP
UdiSH7YyvoTd9yiUJA+2B11l84tCxuWtwvAjbL9E42qaI5ehpHkhGpm/iHfc
efqA4qORZK69Njif8Y+GplDke8+f7dsYuK/j3u9cy/QXg523+V3+fcSXi4HQ
4UHBUBibfwyaXwtVuv7Ezi8WicsCc5Vf0nuEWDjPTzLs+sGU+o9FTFW1wnQu
6ZmPxaMTC/64ks/OT4E3phW1NfypPwWSZR9m1/zK7rMCk+KDuXGzWP8KLJdl
mD/+lPGPw+iE+H7QKbofiEOSZ9JP0wXEh4vDnrWKwkM8uz9x6P/uotjqPepP
EI9LhzvrTeez/uMhN6qqOx5JmIuH5zpeki5n9yce442irq5V7L1TorH130Pf
19C+FSohiul2iqplelTCyK2uascHNH+lEhafxFfa57H8Svx1Uny4KZL46pSI
iO3w3v8v2ie8Eh39e62s55F+e5Vo37a9WW/J9pMKPdqGNdP1pAehCovddhdW
vkf+UGFfXlGBroHyKVUoCTIrFxxn+lbBYXqN7erZ5K9TwSJE0FvtQvl4FazT
A2RDaay+CjFi+e1XtrL5q/FLuI9cH0XzFKqxtFUhvl9O+oMaAR4jPUf3kx6U
ahg7jeuP5TN9q/GkdKPHQCHx06lheFez9+a1Eepfjb/Y70r70Inm2atGYMrA
Hh8V218auPhNNAycpnihBoZ7w98KltF7Bg3ElTYPZ0lovkoN1jeP/3jWi72X
GkTXnuEOd1K/Og26zEO10ck0H16D/4wvvvv9E3rvejXoiNW/lf2YvX8J0IZ6
PA23pn6FCUhV2BneiKJ4JGCuLn+3LIv0okyAISFnielatt8T4DPpXifuHpPM
EYUV1Z5IQGTB5hLbe7PxP4iQG7A=
         "]], LineBox[CompressedData["
1:eJxdVglsVFUU/bSFpIhQaGUpFAZKoLQsI4gCJuVYtkBRG4KFWm0GZPbtb8G4
ACMQkKVlAlVMleEHEBGXDKVhK9UpgqySEYxCJPJTW9EC7bSdVnYszh3yHk0m
zc377939nDN0sXeeOUEQhC86f4/+t9arPw47vwQL/fk7+jc+BeHRn74EddO3
aO8OvjP1f1swo6VrW2NqWXvMNphRWbRs8ZFAR8yGGZkX5tU0fp4Qu2/q/L5m
0CvOw0kx22dG2dWMgy1rusZszYwtB3afzOxDdsiMdcunrF85P5H8mzF57c7c
MfvJFixIvzHXmrr+Hvm34G5azp3AwRbyb0H3iXujxfqDmG2yYMCxt8alZgvk
34L5x4qaExMofq3zvcbkmfM77sbskAV/9bhxarqP4tUtGDfth+MLJ0Upfys+
seZteWdHhPxbMXDO+ILkVV1i38OKjvqOn6ZfaCX/VjzI/qpw2KG2mO2zou6X
pRdKGygezYqNG87a8grpPGRF1u+lyVtn34rZuhVFA5NtL+dTfQUbwoFr6W1V
dG6wISu95zTk0nuwYdbwcvvmN/8l/zaI7zU3Dcuh/vlskIZWGUfnN1P+NvRq
VTcceOE++bdhlLH804YJcf82WJrCP+dk3yT/dgw+POnmbSvVw2CHZtcqR1hu
U/3tyJ6xateKPdQPkx0167qdyRoQ92/HM/aPj+/rRfXR7Hg/MrawOn4/ZEd0
W3XqrnKKR7fjuZHHvCuHUz6CA6Gk/q6J6VQvgwN5Hv9rcwPx+jvg711csSyT
5snkwIzdq9+Y46P58Tlw8W0x8UoOva85UHVa6JOrJcTOQw4kXfvGu3sNzYfu
wN5XPywbWBfP34mofV5gafUN8u/EnkWB+iFXqV5woqL3xNqyQ5SPyYmxhVLp
+H4Uv6/z+201DVPaydacqC6ZPTXYEu+/EyXii7caFtE86k6cyvx60Lf36H3B
hbUJTc8/XUj5GlxoMtVX9SiJ758Lm7YXLfjt14fk34Wj3S+PWnGA8vW5kNY1
1Z9vpfuaC83fJ00tqaN9CrkQPD+izZRM/dVd+Ki4OfelKPVTcOPcyNOHG1Jo
vwxuNG+/vnRkxT/k343vJuzvUvws1dvkxvWD5wZ3uKjfPjdK64dc73uc6qe5
cTXvZu6CCoo/5MZKabKtMEz10N2Y+efD05fG0H3Bg+iV3C5/p8Tn34NL50dk
rG6heYYHrZXlGesy4/l7gHM7P1hxkb73eeDxBbKr0ilfzYPRS7bOSpsWz9+D
SWf7rKotpvh0D5JmNWyd0Ravvxf7lkdqQ+20bwYvzpx4kHbxNtULXgTZc5MX
iex9nxfj2fc1L8Zw/r1wsfHpXuSy8Qsi2tj8UkRcZvM3iGhn62MU+fpB5Otb
IOIPtv4mERvZ/ojiE/0TUcP21y+ile2/JvLzERRRzs5PSEQlO19hERF2/nQR
fdn5jIg4ws6vIMHPzneKhAg7/waJ3w+jhJPs/kBCMbtfBRKOsvtnkvAlu5+i
9MT+Svx++yV+/zUJLSw+BCUeP0ISurH4EpZ4/NElHp8iEmay+CXI2MTiW4rM
459BRi2Lj0aZx0/IPL4WyDz+mmT0ZfFZlHGUw2+Zx3e/jB0s/msyMlh+CMo8
f4RkZLH8EpbRk+UfXYaH5aeIDC/LX4KCfJbfUhSe/wwKz49GBa+z/AmF59cC
BWUs/5oU1LP8LCq4z/G3gijL736F539N4fVBUIGR1Q8hhdcXYYXXH7rC65OI
gv6sfhFUXt+kqLjD6h+Din6sPjKqvH6CivWsvipQUc7qL5OKjaw+E9Un9JvK
6zu/iv2s/tNURFh9GFQf68e1pSc+azqkPtaX/wFOjlNn
         "]], LineBox[CompressedData["
1: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

         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "b6aeb3a6-4143-4260-916d-a903a9590515",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.4893047980604415`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
m48Pupqrl7VVH5VD/vIrpZ2LHv4HKVQ28g==
         "]], LineBox[CompressedData["
1:eJxdVgtQVGUUvqhJLo3uNIHPxpWZMs3hVQi6DX5ZPqC18JEziuPcYdj3675y
CnHaGkvUsXAmiXKCi5jolIbg26g1FF2bchFKxcoVyRBMFxQEBEzb/zb/387s
7Jy5e//vnO8/5zvflFzvEvMwjuMqH34f/ebGZ0x3BfOQN1BW+kKGDtyjTygP
SVb1C92K+3P+jTkzNm7uiK9t7o/EBjMeNN9buDi9JxLDjNoX15YfbHgQiXkz
qrnT46/0REfO85mR39T97Xd9UZFYNWPngkD6zQUjIrHfjILWmtj6tsHI+yEz
pre29Oy6NkDwLdiQsfZq8RDBM1gwbt7B08YODd+CYNG1rMY3uMh5vAWdqSv3
nd9DYp8FH89K32JquRv5v2pBoXu7/fXnSey3ICXWt9TQqOFbEN2U0L7vZBvB
t+LsW/13KuOGCL4V/bFZSVEzCR+w4sP039IKosl5vBWDL3e8JmQSPnxWNCRb
1205oOFbMXJ32vwfniL5+61IrSree+rdMMG3YtzUirQru+8QfBumRR2vPHiB
xAYbJmeuiEtvJ/XBhpz7c/9+Morkw9sQM/l0YM3wewTfhuWu3q3bKroJvg1z
SwMzJz5D3vfbEFhVN6f/Pvl/yIaQaeMx/SmSL2dHKNyplnV3EXw7Fv3aZv9o
iOQDO2J2ZB1dWUie83YYRx9atrhY49+Or/csfPvTzD6Cb0eGpza25ji5X78d
ozwtl/84RZ6H7Hg/+WZUSTGJOQec15eUTZ7QQfAdGFFq6ryXq/HvwOy0gbrA
AtJfvAMTqnes7n2VxD4HbozZf7XTSfJVHQifW1ZdcFOr34Gmlj99zQkkn5AD
FzPOfFka30LwnRh3JWdS4jZyPwYnXMk5+mPPafw78cHUuPicZwl/vBN5LTWZ
iSMJfz4nGl4pPfCgoJPgO7FUXX/rlzdJfX4ntlfrSso7tPqdOHnoSNagX5s/
F7pGfbJKrCf5GVyYnTxv7vf2XlK/C9crty+eoZD6eBfkqaG2n4Zr+C74twxT
vjJr/D98/9LF1bPKSD/7XXjcmNI+NFPDd+HI7ynrmnquEXw3Buofm9ZrJPNh
cKNXZzxxOJXwATcSzGfu1jZq/LtxMXe5xbZOw3djdUlcVOImjX83sqKD8ydl
kH70u1HY9F7+3nSNfze61Pk1qZvIfHAelGw2PT2ldVjkfIMHJtPEpjH1hE94
MKPrm9G76zT98eDW575Ly9eQ/vB5sHNsVfGYGHJfqgcVwdt1iSu0+j0wDgYG
N//4F8H3oDx/xxnTbA3fiwGfM+VoJeHb4MWMn7sX3SjX+u9/z3kvVPp9nxdp
9PmqFzsZfC8q6PxCXtym8+cEtj69gCy6foPA8pMkIEzzB4HlN1tAJs0/L4Cn
70cQ0Mzcn4BE+n6LBPTR968KbH9UCWz/+AXo6P4KCjDS/RcScILuz7AAke5f
TkQr3d96EbPo/jeI7Hwkiaij5wciPqPnK1vEMnr+eBHn6fkURFiY+RWxnp7v
IpGdf1XEeFofqkRcoPXDL7L6EhRZ/QmJaKf1KSyy+sVJMNL6ppdY/TNIcND6
mCSx+gkJMbS+Zkus/vISq8+ChJcY/Zago/W9SIKJ1n9VwlV6P1RJ7P7wSzhL
75egxO6fkMTup7CEJ+j9xcnsftPL7P4zyJhO78ckGWPp/QmZ3a/ZMrt/eRmN
9H4WZAwx+1vGBnq/F8noo/e/KiNA+4MqGTraP/hl1l8EH55H+4+QjCLan4Rl
dNH+hVPQQPsbvYI42v8YFBTS/ihJYf0TFOTT/ipbwS7af/EK3qH9maBgP+Pf
FNbfFSngLlP+T1WwifaHVQoSiH88dyvUHjis/Ocv/wHkOnY4
         "]], LineBox[CompressedData["
1:eJw1Vg1QU2cWDX/CotRYXEWKmCKzUpUuyqDoKh6oVgaVjVpRqdosAxYFS2RJ
8l7eS4ygiFQ0sv61VoQCWh2BFNturICxonX40VCxMNpKpPEHgRIQpYjAppv7
MpPJ3PnuO/c795x7X95OSFuT5CwSic7Yv3/+9uQ9OT7jpwwkvj5dEBrhCdGf
H0sGdhZv764/073k/7EtA8Z9Vekbv+11xCIFrKVB+tLyUUcsViAfA5dyz75w
xBIFHr9X6VPH/eGIQxTo2uxjinMacsRQwHOu+zS/DQOOWKpAc/+irA2urxyx
TAHmwIKdqRaqJ7fXm52Zlr+BYp0CvrGHrMuMw45Yr8Ahp6n3JLyL4/6FCvSc
zYxf+HjQcW5QYFx8ZOUw99IRmxR4wztB/sKb6psViG9a9uNXS/scscWO/8+y
ld4/Er5NAWnzONX9gt+JvxL91WsV2ya5OeqJlVhzMTV8Dkf3lyhxTL/p3fHj
CT9EiQnxT0uVf/QTfyVaeVPgpgob8VdiedqkB8Y2kQNPpkTcHsOvs85RP+X2
uKDv4i4x8dEpseLkWuajmRTrlbipHi7teIfqFdrxP+tMORn2mvgr8Utk9hbT
CuJnUsKr2Cs5d5rAXwnTqdYrPt6Ub1Hi/CxD22sz8bUp0aFqXCgZS3qKVGhs
rzI8Xi/or8LsMXmRWR6kj0SFI8N/+brARHxCVBiVXn8wdjbhQYXnn67w3DpB
0F8FbWRF9uI7hC9TYVWVNf+cO/VLrkJtUsm2a8vofjoV4qJ96zZlODnw9Spc
SvJn6hXUj0IVgi0rl/f98pz4qxDdr2v+wEr+M6nQav3rlkQ38ovZzufG0zbf
AtLPokKDeU7fyO+EZ1NhQucSxWE9+UHEoOTI/LIxTyhfzEB55Ou7IVtGiD+D
v3UO3q6a8oz0ZxDgPHX33iRnRz0weLNZk70+j/SQMnh2PPVbl06qJ7Ofv9z3
MPI5+UPOoOZxQ0VjOd1fxyC5setR4nuC/gy2FczoefahwJ+BdNnGtR8OUz0D
g47SE7Wy3dQ/E4OZR+vD+2LIv2YGe7xWzhtuoOctdj7KtvKgncTHxqB3vqip
aCL1U8TCMDftZvvlHuLPouY15vynjPojYcFVvHWgxSDoz2LpkG9YUAzxBYuo
0e3VruECfxYj5bynjiN+Mhaajwd7f3iL7i9nEZ995dptNeXrWGSmHo1ZNZHm
Q88ix9VU0pVC9QtZpH/gVt/p8YT0ZzHP5GWr8RP4s2B+G3vJ2Zf8Y2Zh3byt
ICCN/Ghhcf3C3FSNJ+0LG4vlD3cvCbO6OvJFaoxzah5qCRXmXw0n/8gdk4+R
vyVqoP/f30dOJ/wQNTL6P2rNr6P+Qg1rzcPetMUCfzWiBp7+q+8p1ZepEZwX
ce27cGH/qWEr99jq8oOgvxpeJWnrSy6S//RquJ+eta62UNBfDZa9f+xkJfnb
oEbmictvF39DfjKpESOdZGWE/WtWY6CK6QxcQvNmsePfqmv4rIjwbWq8n7Nx
e+Jqwhdx8PP7b2iPkvot5nA61uBc/AXNr4TD/IVVbIhR2P8cMGPvK8Ut2hfg
YM3eEWhmrcSfQ3dWbpn3GGH+ORRHzO8JPEV6yTlkTQpKLEkmPjoO7kXvH5eo
yF96DoW7F4+mL+0i/hxWVh8ezFpD/jBwiNpf8mncZNLDxCHnq6L8lgXUDzOH
ySmmKDNL7zsLh67eqL+vjqB8G4ei0dz2qSnUfxEP5q7/nfuHqB9iHg98Yn2n
lFC+hMfCmOPenX00LyE8Ktc2NJqnET/w+OKG//TYmZQv5XEw7+W6b1rJXzIe
JeHJ/1iUQP6S84hNf7G8WUL91vGIr8xfVbyP+qHnkbDIpW76PcH/PPjnO1YN
lQv8eTjPyCrovkvnJh7pHl7Gdb9Rf808mn+q5r7roHwLD5/M67Pb3AT9ebzb
XfWJMUDwvwZbe09Y7wXQfIg12NCyeU9QqbD/NDjfMnxm/3jCD9HgVdiCnztO
Cfpr8P0CF82VJuqfVIPO9FsJ3inkP5kGEfxS4wEvwpNr8EmvtS/+BflVp8HV
wVy3X0cE/hrMbJry+bEg0rNQA/8UafMFYR8YNLgx753qR+0Cfw32BGYPzNKT
nmYNzl5ztSRFC+8/DUb8Os+HXqD5s2mQWV/7RvtOqi/SQjIx1DV7RNj/WpwM
7qrxKaP7S7QIj70pH7hD8x2ihdE8UFP/iPwALbKvlh9Uf071pVq0D52rX9cl
6K/FwXPxRr6Nnpdr0XSqaeoFMdXTaTEhLGc1l+ZM/LV49uVhn9EHwvxrUZd4
PXlvHN3XoIU47ih/dRrpa9Ii3hgdfPNL0s+sxWjRw+DEyzSPFnv922+aAoT/
KzYtzD8nH5CZBP/vgvviW9G1rjRv4l04sn/Kx9tdiJ9kF1JzPPwrUvqW/A9v
GHSP
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "c799f9e4-6e4d-4c0d-ae66-a6c829b11e18",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.2803718941282103`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
KfjiXMCY37Foo0VpmQrLY1dJw7fPxf8Bv2ItoQ==
         "]], LineBox[CompressedData["
1:eJxdVgtMFFcUHUAaBITVFrVJYwfx01grGLVtFOXEorVW6wqJqJV2BHZ39j+/
arUfRyVKtJaN2lqbSCehfkIt2SLSoCjjHzExWGyjRO2CxvqpdRVRENFi903z
hk02m5vZN+fdc+8996QW+HNs0QzD7O79Pv8dl/B3a3VjEV7NHf/x+8vjwTz/
hIpQ3n/UPN/t9qz/YsYG67IO5c6Qx5GYtaEq9bUEy4BHkRg2BK5njTu9tjsS
czZciqmY/eyPmMj7VBvyk6aoYhw5r9mwpyHFnrYkOvJct2Fmzeq1d48xBN+G
OaP/qkov6CT4dhRtm53ir+0h+HZkttQe+7H7NsG344RSsOVE1xOCb0fOmU+K
2tviCL4dQx6PPDzoM3JfzY5rZzYVXk1/EIn13v93p8XH//ksEofsOHT1YJmW
SO7LODD4932NIwrJedaBPavEL6amPyX4DiwZOya01BYm+A5o9uLkWUtJPqoD
/PnApSe/Ej41BxIGOUo3sPcIvgPTqo4ur0wgeCEH/HuuTC0vu0bweWRWFLZU
FpL3szymxr2z5cNywgd4JE6cGTUpNiqCx/FYmdO2qxgPI89VHuvaPTl18YRP
jUf2gE8zU+pJfXQe1RmxQ/Ma7xN8HqeL03ITa8l5xolwjEtNPWfU34nUI7M/
6GwnMZxQgu47IybfJPk7cSN/46TrEwhfqhNv9/g714cJX5oTh28eP3h/E7mv
7sS8zUvTW88Y+TvBbK88GiUY9Xdhrrvx/PFVtwi+C91JnH3ifPIcLpRedB1I
qiXnORfeyr9QE/u6wb8LJfP5KT9NNPrPBWveM+uYzwl/ugut46zNY7ZGR/4f
cmH/xXMj99Z1EHw3FtYObkz7mdSPdYNLGzi97qjBvxsnq8999+ZZki/nxoDS
9+pXbSLzoLrBXou+25xl1N+N6EklVUUvET50N+IW3du+sKeL5O9GV15B+aFs
o/882HCwYkVWFulv1oPiR5f7Vaw08vdgycoLqVMqyXnOA8uwcOYsB4nV3vjE
mv3bukm/aR5U753m/yGG8KN7EBKTLwzbasyfB9n67oZbl0g+jBdRzaUnpa67
BN+LlzsWz5tQc4fge7F+n+3U2FMkH86LBw8sSR+VE/5UL4a9on8TNZz0k+bF
FczaUl9A8tG9yB6+4MXcxUb9vWiUGkJPWoz6+7D4fFt38JfYyP1YH9apUV/+
M9roPx+KeV7ZlW7U34cNPSsubzPmXfVhWbk9f2Chge/D94kla77lDf59yDkb
bIueY/S/DzveyB9142tyP8aP5NbV1vF5hB/WjyPNZQsCOwz96/Oc86OMPq/6
ze/X/H3w/ZDo+4X85vszAtbR+VkElND5swIW0fxkCGig+YOA6TS/VgGXaf45
ASxdH0HAQ1P9evHo+gYEDKXrrwl4+hvVH0HB3D+6gFa6v5oEc/+FBCTT/RkW
MIjuX0Y097dFhEr3PyviK3o+MkR00vMDES/Q82UV0Y+eP040z6cg9plfEQ30
fAdEFNDzr4lYROtDUEQNrR+6iDZaX5pE5NL6ExLN+hQWzfrFSGZ9s0hm/WMl
vEvrY4Zk1k9ImEvrq1VCPa2/nGTWZ0Hqo9+SWd8DEkbQ+q9JuEfvh6Bk3h+6
ZN4vTRJm0PsnJKGE3k9hyby/GNm83yyyef+xsnk/Zsjw0vsTsnm/WnvfR+9f
ToaT3s+C3Gd/y+b9HpCxi97/mowU2h8EZdTR/kGXkUv7iyYZbbT/CMkYTPuT
sGz2L4yC47S/sSiYTPsfVkEh7Y8yFLN/goIZtL+yKthN+y9OMfszQUGLyb8p
2Ez7u4CCfbT/0xTMp/1hUMFO4h+dj/uX7jyg/O8v/wXj4VlF
         "]], LineBox[CompressedData["
1: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
DxhFa6E=
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "faf4cd33-9f49-4d9d-802c-dd742261cde9",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.308249229138155}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
H/3vwls=
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "e9958ddb-3ee7-41cf-889b-938a66751992",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.6168269103552624`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
506DrVbfasIFKj8dF5bM7eRz8jaRn46txS9zg7YSfyAdbr/5w87XUfnpqK9I
+vzSGhrf6eg0aFqfyiRynj0d3qJ/LX+2mqyd6dDdrbOEVxB/udOhil/zpEc8
lZ+BFeYJ275+n8SXJAP2s4cmBf1C6jsysOSvkuTR/7//DBxrKrmR9YLKz4Bm
uE+bJkYafxk4MCtuwLDSe0R+BnaOKxOVlZPz3RkIfTKqrN5K5WfCs2DY9LBZ
5L4lmTjfYsH6jx6ReEImVqX+PqTHfBr/mZgXt94rYoPXO/2smei05sfQzGmk
/tkzIfqndffJUbReZyJu8jcLJV5EnjsTUd9v2f/5/GoifzZ69kr5fWB/8v5I
ZkN+2vpk1Tyaf7OhP/Rxvr+I9FfCbDzoplxeMpz2W7PhvO03YOjPVP5sqBYv
D4zeTuNvNmqzR60MTiX2uWdjbkZ5+YaXNP+ysL766vnq2SQfJFn4IVLaal04
vf8stKjc0mfIdXJ/QhZObwq65fM5zb8spE2pT701tNk7efYsLLp5dF7pdmp/
Fob3ff2LfR6pd+4s3Lz+75ObWhB7RdnYfuTM1Mt+JL4k2ZjWN3B/5Rzq/2x4
l4U9diwm9VjIxgvF9OLlk4l+1mx81/VoTOVzan82Ck7tbeI9ntyPMxuylB9C
FK2JP9zZeHw88GhqB2p/Dq6u7Drk0lQafzn483JA1jAFzf8c2K7pqweV0fjP
wfDueaXoRvubHPx24tzaJrfJ2p4Dx6+OhONb6Hubg44ZXZYlTiP+cufgdZ9y
nzW9iH6iXKxZF1VeNJXan4vz44u/OJ1L4he50Ppv63iqhMS3kAvJCduuCiv5
bs1FVHyLk/mryP3ZczHr2qYOMRHEH85ctDgodG39IfV/LtJS6ue2/4z2b3nY
0qfi3v4C4m9JHj4quT/UnkH0RR7KR9T0Uo4g9VnIQ7btWph3Izqv5OHCmxY7
X6wg+WnPQwffZbETqL7OPPyqm7Bn+BZa//LwuJckr7oftT8fdYe2eHc9R9aS
fPT9OGhkUQatf/nQfFZSHbqL2CPko6b8XxavzbTfz0dwSWnOfQ/1fz72rVvl
33ohjf98VBzXnE1bTOxz56Na83KgYSOVX4Azg1bPeLWOyi+ApWkn1987rxH7
G3wXCvj91gIcZ8+3F2AvJ78AQax+7gJef5EcWtY+sRz9WPslct4/UjlqWf9B
jhOsf2VyBLD+F+S4xN6PXI5c7v7k/P3a5OjN3r9djs1sfDjkfPw45WjJxpdL
jiQ2/txyTGbj0yNHdzZ+RQo+vsUKPv4lCqxj80Oq4PMHCj6/ZArsYvNPUOAk
m59yRYP8VfD5bVPgLzb/7Qq42frgUPD1w6nAZLa+uBSQs/XHrUAJW588Cjxl
65dIiWZsfRMr+fonUWIbWx+lStxi6yeU+IStrzIlFrL1V1Aig63PciX+5Oq3
Ej5sfbcpsZet/3YlNrLvg0PJvx9OJR6y74tLCSX7/riV/PvkUaKGfb9EKujY
902s4t8/iQoS9n2UqhDJvp9QIZ59X2UqvL7GvL+CCoHs+yxXNXi/VVjJvu82
Fc6x779dhQdsf+BQYTTbPzhV2MH2Fy4V9rH9h1sFLdufeFRwsv2LSI0v2f5G
rMZGtv+RqLGM7Y+kaijZ/glq6Nn+Sqbm+y9BjY5sfyZXo47r39S4zPZ3NjW2
sP2fXY2LbH/oUPP9o1PN95cuNXax/adbDT+2P/Wo8Q3bv4o00LP9rVjD978S
DcLZ/liq4ftnaLCb7a9lGqjZ/lvQ8P25XNOgf9dgLdvf2zS4z/b/dg0/Hzg0
2MPOD04NrrPzhUvDzx9uDU6y84lHg/bs/CLSQsrON2ItP/9ItDjGzkdSLT8/
QQs1O1/JtMhn5y9Bi5vsfCbXNpjftIhl5zubFt3Y+c+u5edDhxYP2fnRqcVW
dr50aeHFzp9uLT+ferToyM6vIh2asfOtWMfPvxIdTrPzsVTHz8/Q8fO1TIca
dv4WdGjPzudyHWTs/G7VoQk739t0/Pxv18HC4gMOHTay+IFTx+MLLh2PP7h1
KGLxCY8OVRx+oefxDbEeHhb/kOh5fESq5/ET6Hl8RabHQRZ/EfSoYfEZuR4t
WPzGqufxHZsedSz+Y9fz+JBDz+NHTj0CWHzJpUcEiz+59fiJxac8+gb4VSFE
LL4lLsQYFv+SFKI5i49JC3n8DIUoZfE1WSGesfibUIi7LD4nL+TxO2sh/Fh8
z1YIOYv/2d/uZ/FBRyGPHzoLcZnFF12FPP7oLuTxSU9hA/zSwOObYgOPf0oM
PD4qNeAqi5/CwOOrMgOSWPxVMPD4rNyAcBa/tRoAFt+1GXj8127g8WGHgceP
nQb8yeLLLgOPP7sNPD7tMTTAr408vi02QmDxb4kRa1l8XGrERBY/hxFRLL4u
M+IRi78LRuxj8Xm5kcfvrW/ls/i+zQgJi//bjQhi+QGHEU1Y/sBp5PkF19vv
LP/gNuITlp/wGBvwFyZIWX5DbEI2y39ITDw/IjXhPsufwISpLL8iM/H8i2Di
+Rm5CVUsf2M14QrL79hM+JPlf+wmBLH8kMPE80dOE88vuUyoZfkntwnjWH7K
Y0Iix1+ZeX5LbOb5L4kZB1l+TGrm+TOYMYrl12Rm6Fj+TTBjGcvPyc04zPJ3
VjPP79nMGMvyf3Yzzw86zDx/6DSjA8svusxQsvyj24xalp/0mBvwlxbMZPlN
sQXBLP8psWA+y49KLVjJ8qew8PyqzILLLP8qWLCO5WflFixg+VurBV+x/K7N
AifL/9otuMTyww4LbrP8sdOCtiy/7LLw/LPbwvPTHgtacvz1HJ7fFs8Bx39L
5uDO3bGv+tnejP4vCFLRlQ==
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "d84c8720-8d5a-4c82-a887-bd818b64c12a",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.565855320406447}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxdWX1YzNken4oKLZO1aEOjlmXViptwQ5/yFkWTCtHL9P5e89I0Nc1Mw4pd
scZdK+zF73qXZWet3cUls7bL7g0N6y2vQ63akAnrbcV1H+c8zzn1T8+Z8zvn
e873fF8/n8EphXPSHUUi0UMHkej//9/+2YN7tC7+84cX94PJDwhfNSx0xU+P
yNgV7sve3Ziop2Mxzo5+N3Tcwb/IuA/ib/3WvvjqczLuD/n9O/br3z0j4wGY
/fpRQO+7r8lYgtYhjY/NeQ/J2Bub0wYXDNDR/T/Ap/NHtrt00PFQrG/r3jd+
wh9kPAwZsWh69f5LMv4Ia/4bWbev21My9kVA9NbwCwo6/zFuGGLrQ0tekbE/
/nvGuGxspQPejkdBt9A7qNsDun40so5Hr4w7Ref/BsmOuPlHfR6Q+QC03Rx0
WO9H58fA59eOx0vjqD4CsbThSG5IfgcZj4V+3vTtVTeo/HHIfNSqWntYRNaP
x4N3B0f8oKT6+jvCjsa7jHV5QsZBOHzo6Mnfqun3E/C8cHRVSo0TGU9EVHWx
R/uqdvL9JEQ6aP0CB1L5wbjtLbncuzvdD2ha/9t0p+PkPEbAGi8ynzJ1IfuF
YIn3tRF+B1zejo0h+HnNyPFxI+h+oQio/vnud1nkvMZQnJq8sevpPi1kfjI+
ST64yNzbkayfjOM/rC14eflPMj8FF5Z4uB/NpPKnQPG6udLkT+VPRU7NfbPH
+RdkfireqZPVHj5C9TMN8w+semewle4/DSN+KhNuRZLvRdMxuNfppPe6EP0Y
p8Os/K29Mo++Vxj67vgjxLNvdzIfhqvNuYkjnR+T9TOwavn2T9vcyffGGVj0
zxuBlXl2Mj8TtzMeDrvXTL43zoR5QsmyMA8qPxzTDoeEvLOCnj8cfkuU+y82
0vePwKtbQ6JWDCT2ZIyAqXZYVelVqp9ZCDix7aLfTCp/FurNij+/nED1Pxsp
bY4TzSfp/WajUtut95UQqp9IxAemNX/hSezZGImPfnnZ79fB1P+k2D6yxXWV
hvgHpGjaUhMQXEflSfHkyc3JTj3IfhYpwq4NjTkXQv07CpuKr1QGxhJ7RxQe
tD2YIKf6MUYh1HzhlHwk2d8ShQvHByFyAPWPOfj9vWs/hm0j9ow5yHnp11Dx
HtnfOAcrduVsUZmIPVvmYNGIg64VrdR+o3H2D+PrVxYyRjSWhoxMmNGN7GeM
RtPpsT4DxlD50XCZdMx1jyP1nxjIPOs82kH0iRgoCmQ3VnqT740xMPTYOmbK
/TayPgYHq6p6vP8fGh9iMWadc/ln84j+EYuwT58VeVaJifxYxGq/uecT2UrW
x2JidJNX/030feai4ljMMc8rxF8wF3cWN36/cjyJh8a5SLzr3LVhate3+1nm
4lJHz7GrtlH/modz6SGT78jI/piH1tkVBx4ZSbw0zoOrx52qgw/Ie1rmoWWV
e0r6Ymrf89FhLq9r/ILcB/ORszz5+4d9qL3OR5fwPgO9TCQfWOajW3l2VFgl
tb84nO2TPFOzhNgr4vD99Adu2e5U/3HYs2/UsF4mMrbEoe/qjTP2P6X2vQBN
24cPz91E9IsFkK+e7Px8OH3/BYj6R+aND+vp+y1AH5+oURv20Hi3ELkJV7+z
lNL3XwhVgNv6Pw+T8xkXYn3qFN/+1USfloVQPxhUf70Ptd94PPX03vR7M32/
eDgv2f5ibQfVfzx6Gb7ZeOBfZN4Sj3naZYXBW6n/JiDlx70FPcqIPyEBA+45
TdyxnMazBGwbrBvrsomMLQk4MLL1skMdXZ8I5+5rn03Z6kjkJ8Ktp5fXpHRy
H2MiTjvfkEj96P0T0d9raaM5iebLJLRs+ezC5UvkPZGE+KoXk4aup/E4CSeG
bKl4eIj4oyUJYqea2DVK6v8y6CeM332imdiPRIa+n6gqssKoP8twflrb49gx
5L1kMnw9PFRxZds9sv+b7zUnWyqWkvsIMtgO/dvocYLeV4awaN8O3Tiib5sM
y1ekya7W24j8ZFzJ0o1KdCXxXpIM9wcXN/j60Psk49Vf9YVFp4g9y5Kxuatb
ans+1W8yZqzfX7HuIjmfkIzVwpCOJUXEni3JOD8+dJ73nJtEfjL8xOHDV06n
+ktBvfrbrdPnEX1JUrBccMuNH0XtIQWHu21MW9Of3j8Ft5/2C/92B42nKegR
EbBuR0/yXkIKfAc123bmUH9LQXpEeeCqYnr/N9+vb61dmUzzcyo2n+u41lNL
ziNJxbrsm/JPA8j9kIodT7x+KtSR88hSsbbq3MCK09S/UuG+oiVHcCPyhFQ4
zop+njuG2msqwqviZSeHknrJloqCmarbvefQ+JuGb+rDPZeUE3+XpOHOzwUL
v+pL7TkNWZNR63WGzMvS4PDcrqs9S+zFmIb8a2taqlXE34Q0eC/+4+Og1TRe
pKFpWVvXoF3Ob89jS0NMep1HageN3+l4Xbnn1c0LVP/piDpR1zXOgYyRjrXB
3QuvrSD2K0tHg+N/Qq83Ev0Z01HwOC63/ywiT0iHJzb8GryXvJclHXmXfGdv
qSXf29JhHnHyxvUWmv8zYNvrGpuWRuxZkoG2VlvIozlUfgYinsXF1c8n+pJl
4Nz6/Re8jtD4koG+cVEtSQFEX0IGskyDB17fQ+KzJQOjo67aKiRk3paBmIe6
9O4f0vyRieStloHhk8n5JJlYunqAk1sNqQeQieBLLnrfJmI/skxMWug7rt9j
kg+MmZAsOO9xYhdZL2Tio+EztRfayX0smXAaMn+h0Jv4jy0TB75xP6yOpvVL
FqoPPdpam07lZyHx6ZFD174j88jCtiHumxNoPJZlIeZ8+elFPtT+suC2+/LM
ahH5XsjCpIG9vdQJxJ8tWTi32ynoYAPRny0LzaYZp/zm3iXys3Gm29c9H9N4
K8nGli4i6Spv6v/ZeNHhlqhcQ+0vG1+3Fjx+9T55b2M24r46GXPmHVKfCtmw
Rx0bFZ9I43028m5P++e+JOp/2ThY4Pe4ZwPtJ3Iwa6S5V4d3I5GfA+PEX1Iz
nej9c5DYJcRRUUrirywHNutNRcpFGl9z8HXLvrnr8oi/CTlYctrX79AoR3L/
HLTHnB6omEvsxZaD5qDNI4K7UPm5aNXrHWUe1P5z8f3e4EbpOfJ+yMXdE/+q
6/4JeR9ZLiJ2//1DoZbWZ7m4fMnhS2sMjb+56Orz2eH0nrRey8WYYUEN7RIy
tuViwtV1X479gOafPGR7jnZpSKby82CsrqspfETkIQ81H5Tu3ryZ2n8e1u9T
jWsaQuvdPEyZFnNj4h2ibyEPm4I+eHV3AK2X8nDBtd5xE60XbHl4NthiWNGL
+l8+ok/tdJ6SS+KBJB+S7KDiH/9N7AP5ePz5q0UNxVR+Pg4c9/9J4031n4/N
mkDPqbuIPwn5cN+7M615EHlvSz72J51yPeJA7MeWj9rKjJ9rs2l/UYDuO/3O
FqUTe5YUwCFpZ8zLsfT+BThi7NP189VU/wVovLpv6PC+NP4U4FgPw/6vosn5
hALcGCP5XBtJ818BvKodemE5sSdbAdrn1hSejCT2ISqEz6apXwj+RB+SQvhG
u4wIPE79v9O8rBB2dr2xEBJ2f6Gwk/xCHGXPZyuEjT2/SI4a9n5iOZzY+0vk
vH785bz+IIeZ1a9Ujt6s/mVybGLfRy7v9H5y/n1Ncv79BTlvH2Y5bz8WOW9f
VjlvfzY5Qln7tMuxjrVfkQJHWPsWK3j7lyh4//BXIIj1HygQyPqXVAFn1v9k
Ct4/5YpO/qvAPda/TQr8yPq/oODjg1nBxw+Lgo8vVgUff2wK7GHjk12BW2z8
Ein5+CZW8vFPokQEGx/9lXz8hJKPr1Il7rPxV6bEAjY+y5Wo5uK3En+x8d2k
5OO/oEQ9mx/MSj5/WJQ4z+YXqxLBbP6xKfn8ZFfy+UukgsDmN7GKz38SFXaz
+dFfxedPqNCFza9SFYax+VemwiA2P8tVnfK3CmDzu0nF539BhRS2PjCr+PrB
ouLrC6sKOWz9YVOhP1uf2FV8/SIqwmy2vhEX8fWPpIivj/yL8C1bP6EIOWx9
JS3CALb+khUhn63P5EW4zNVvRfiCre9MRZCy9Z9QxNeH5iK+frQU8fWltQg+
bP1pK0IeW5/ai9CFrV9FamSz9a1YjWa2/pWoYWbrY381Ctn6GWpEsPW1VM3X
3zI1xGx9Llejiqvf1djF1vcmNV//C2oIbH9gVqMb2z9Y1Mhg+wurGiPY/sOm
hivbn9jVfP8iKsYRtr8RF/P9j6QYZ9j+yL8Yvmz/hGI0sP2VtBj/YPsvWTHf
n8mLIXD9WzHf35mK8S7b/wlv9mf7Q3Mx3z9a3uzP9pfWYtxi+09bMXqz/am9
mO9fRRq+vxVr8B7b/0o0WMT2x/4a9GT7Z2jwC9tfSzVYyPbfMg1a2f5crkE/
tn83avj+3qTh+39Bw+MDZg32s/iBRYMdLL5g1fD4g03D4xN2TSf8ooTHN8Ql
cGHxD0kJnrD4iH8Jj5+gBBtYfEVawuMvshIen5GX8PiNsYTHd0xv1rP4j1CC
Oyw+ZC5BPxY/spTw+JK1hMefbCWwsviUvaQTflUKZxbfEpfy+JeklMfH/EvR
yuJnKOXxNWkpWlj8TVaK8yw+Jy/FZRa/M5YigcX3TKX4ncX/hFIsZvFBcykm
sPihpRSRLL5oLcV0Fn+0lfL4pL20E36phZ7FN8VaKFn8U6JFEouP+mvhzOKn
0KKRxVelWixj8VeZFlYWn5VrsZjFb41afM7iuyYtj/8KWjSx+LBZy+PHFi2P
L1u1aGPxZ5sWAotP27Wd8OsyHt8Wl/H4t6QMO1h83L8Mw1n8HGU8vi4t4/F3
WRmPz8vLePzeWMbj+6YyHv8XyiC6zfAD5jL4svyBpYznF6xl2MfyD7YyNLL8
hL0MRo6/0MHE8htiHa6w/IdEhz4sP+Kv4/kT6Hh+RarDxyz/ItPx/Ixch14s
f2PU8fyOSQcly/8IOlxm+SGzjuePLDqeX7LqcIbln2w6np+yv1nP8Vd6nt8S
63GW5b8kevzO8mP+ep4/gx5Sll+T6nn+TabHXyw/J9fz/J1Rj2ksv2fS8/yf
oOf5QbMe5Sx/aNHz/KJVz/OPNj3PT9r1nfhLA7JZflNsgJblPyUGnh/1N/D8
KQwIZPlVqYHnX2UGpLP8rNyADSx/azTw/K7JAIHlfwUDzw+bDTx/bDGggOWX
rQYksPyzzYBzLD9tN0DM8dfliGD5bXE53Fj+W1KOU25nayrf9Jv/A9jUuT4=

         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "73516326-bf32-45d3-a7c4-dda30ee4d2bf",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 4.147565677327357}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.007333333333333334], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "6f308a1f-f38f-48cb-a875-85c485ad57aa",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{0., 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{0., 498.}, {0, 3.9548480431393322`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.790024896597947*^9, 3.790024995570277*^9, 
  3.790025250510838*^9, 3.790025296758698*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"33ef1aee-56e1-4522-9a82-72dc8be5e9f6"]
}, Open  ]],

Cell[TextData[{
 "Noting that the spikes of interest are both the largest in their respective \
plots, and also tend to exceed 3.3 or so on the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]],ExpressionUUID->
  "9e484529-9ec3-43f1-82f2-fe112b7de607"],
 " axis, we use this to locate the substrings of interest. We compute the \
positions of the middles (strictly speaking,1/2 position to the left since \
the lengths are even)."
}], "Text",
 CellChangeTimes->{{3.790025029394092*^9, 3.790025098489461*^9}, {
   3.7900818143402853`*^9, 3.790081883013401*^9}, {3.790081932830647*^9, 
   3.790081937614016*^9}, 
   3.790106866013324*^9},ExpressionUUID->"b3366fdc-6e94-4387-aee2-\
5ff71aef100f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"middles", "=", 
  RowBox[{
   RowBox[{"Reap", "[", 
    RowBox[{
     RowBox[{"periods", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"max", ",", "maxpos"}], "}"}], "=", 
          RowBox[{
           RowBox[{"TakeLargest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"\"\<Element\>\"", ",", "\"\<Index\>\""}], "}"}]}], 
             ",", "1"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"max", ">", "3.3"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
              "165", "\[LessEqual]", "maxpos", "\[LessEqual]", "168"}], "||", 
              RowBox[{
              "332", "\[LessEqual]", "maxpos", "\[LessEqual]", "335"}]}], 
             ")"}]}], ",", 
           RowBox[{"Sow", "[", 
            RowBox[{
             RowBox[{"100", "*", 
              RowBox[{"(", 
               RowBox[{"j", "-", "1"}], ")"}]}], "+", "250"}], "]"}]}], 
          "]"}]}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"Length", "[", "vals", "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7900002245019217`*^9, 3.790000300443841*^9}, {
   3.790000749187278*^9, 3.790001060169039*^9}, {3.790001405254671*^9, 
   3.790001450671722*^9}, 3.7900133780134573`*^9, {3.79001375808278*^9, 
   3.7900137593377523`*^9}, {3.790013994517975*^9, 3.790013996468894*^9}, {
   3.7900141378163433`*^9, 3.7900141390909653`*^9}, {3.7900142084331207`*^9, 
   3.7900142459794807`*^9}, 3.79001432727686*^9, {3.790025153835837*^9, 
   3.790025205567*^9}, 3.790079350058756*^9, {3.790079424976787*^9, 
   3.790079525484207*^9}, 3.790081790967547*^9, 3.7900819417518873`*^9, {
   3.790083378358046*^9, 
   3.790083412979837*^9}},ExpressionUUID->"9f6bce09-7300-43ae-9880-\
97f87833a954"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "350", ",", "450", ",", "550", ",", "650", ",", "750", ",", "850", ",", 
   "950", ",", "1350", ",", "1450", ",", "1550", ",", "1650", ",", "1750", 
   ",", "1850", ",", "1950", ",", "2450", ",", "2650", ",", "2750", ",", 
   "2850", ",", "2950", ",", "3050", ",", "3150", ",", "3250", ",", "3350", 
   ",", "3450", ",", "3550", ",", "3650", ",", "3750", ",", "3850", ",", 
   "3950", ",", "4050", ",", "4150", ",", "4250", ",", "4350", ",", "4550", 
   ",", "4650", ",", "4750", ",", "4850", ",", "4950", ",", "5050", ",", 
   "5850", ",", "5950", ",", "6050", ",", "6150", ",", "6250", ",", "6350", 
   ",", "6450", ",", "6550", ",", "6650", ",", "6750", ",", "6850", ",", 
   "6950", ",", "7050", ",", "7150", ",", "7250", ",", "7650", ",", "7750", 
   ",", "7850", ",", "7950", ",", "8050", ",", "8150", ",", "8250", ",", 
   "8350", ",", "8450", ",", "8650", ",", "8750", ",", "8850", ",", "8950", 
   ",", "9050", ",", "9150", ",", "9250", ",", "9350", ",", "9450", ",", 
   "10050", ",", "10150", ",", "10250", ",", "10450", ",", "10550", ",", 
   "10650", ",", "10750", ",", "10850", ",", "11150", ",", "11350", ",", 
   "12050", ",", "12150", ",", "12250", ",", "12350", ",", "12450", ",", 
   "12550", ",", "12650", ",", "12750", ",", "12850", ",", "12950", ",", 
   "13050", ",", "13150", ",", "13250", ",", "13550", ",", "13650", ",", 
   "13750", ",", "14550", ",", "14650", ",", "14750", ",", "14850", ",", 
   "14950", ",", "15050", ",", "15150", ",", "15250", ",", "15350", ",", 
   "15650", ",", "15750", ",", "15850", ",", "15950", ",", "16450", ",", 
   "16550", ",", "16650", ",", "16750", ",", "16950", ",", "17150", ",", 
   "17250", ",", "17350", ",", "17850", ",", "18050", ",", "18150", ",", 
   "18250", ",", "18350", ",", "18450", ",", "18650", ",", "18750", ",", 
   "18850", ",", "18950", ",", "19050", ",", "19350", ",", "19450", ",", 
   "19550", ",", "19650", ",", "19750", ",", "19850", ",", "19950", ",", 
   "20050", ",", "20150", ",", "20250", ",", "20850", ",", "20950", ",", 
   "21050", ",", "21150", ",", "21650", ",", "21850", ",", "21950", ",", 
   "22050", ",", "22150", ",", "22250", ",", "22350", ",", "22450", ",", 
   "22550", ",", "22650", ",", "22750", ",", "22850", ",", "22950", ",", 
   "23050", ",", "23150", ",", "23250", ",", "23350", ",", "23450", ",", 
   "23550", ",", "23650", ",", "23750", ",", "23850", ",", "23950", ",", 
   "24150", ",", "24250", ",", "24350", ",", "24450", ",", "24550", ",", 
   "24850", ",", "24950", ",", "25050", ",", "25750", ",", "25950", ",", 
   "26050", ",", "26150", ",", "27050", ",", "27150", ",", "28350", ",", 
   "28450", ",", "28550", ",", "28650", ",", "28750", ",", "28850", ",", 
   "28950", ",", "29050"}], "}"}]], "Output",
 CellChangeTimes->{
  3.790025101378685*^9, 3.790025208509005*^9, 3.790025266718368*^9, 
   3.790025301837904*^9, 3.7900793555424557`*^9, 3.790079448622559*^9, {
   3.790079479245809*^9, 3.790079527239128*^9}, 3.790081792769197*^9, 
   3.790081943140347*^9, {3.790083403122933*^9, 3.790083414889866*^9}},
 CellLabel->
  "Out[557]=",ExpressionUUID->"cf266351-cdd8-4fac-a4c2-8915b97d1c95"]
}, Open  ]],

Cell["\<\
The code below will \[OpenCurlyDoubleQuote]clump\[CloseCurlyDoubleQuote] \
these into longer runs, when later middle points fall inside prior intervals.\
\>", "Text",
 CellChangeTimes->{{3.790081950646367*^9, 
  3.790081992599143*^9}},ExpressionUUID->"8823ed7e-24ad-475f-9c05-\
29ff6276cff1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hotRuns", "[", 
   RowBox[{"middles_", ",", "sublength_", ",", "step_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Reap", "[", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"start", "=", 
         RowBox[{"middles", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"jump", "=", 
         RowBox[{"sublength", "/", "2"}]}], ",", "end", ",", "j"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"end", "=", 
        RowBox[{"start", "+", "jump"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"j", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"j", "<", 
          RowBox[{"Length", "[", "middles", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"j", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"middles", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "-", "jump"}], "<", "end"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"end", "+=", "step"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Sow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"start", "-", "jump"}], ",", "end"}], "}"}], "]"}], 
             ";", 
             RowBox[{"start", "=", 
              RowBox[{"middles", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";", 
             RowBox[{"end", "=", 
              RowBox[{"start", "+", "jump"}]}]}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"start", "-", "jump"}], ",", "end"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.790079600413972*^9, 3.79007974530202*^9}, 
   3.790079810907651*^9},
 CellLabel->
  "In[558]:=",ExpressionUUID->"9c4ed136-8526-4561-a504-6d57ebab6203"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hotRuns", "[", 
  RowBox[{"middles", ",", "sublength", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.790079756606596*^9, 
  3.790079771335327*^9}},ExpressionUUID->"adbe96d3-51ba-400f-9715-\
d0d34cc708e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", "1900"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2200", ",", "5100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5600", ",", "8400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8400", ",", "9700"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9800", ",", "11100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11100", ",", "11600"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11800", ",", "13800"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14300", ",", "16000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16200", ",", "17400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17600", ",", "19100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19100", ",", "20500"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20600", ",", "21400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21400", ",", "24600"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24600", ",", "25300"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25500", ",", "26300"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26800", ",", "27400"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28100", ",", "29300"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.790081915859367*^9, 3.7900819476621323`*^9, 
  3.790083421746052*^9},
 CellLabel->
  "Out[559]=",ExpressionUUID->"95f1e6dc-42fe-49ef-91b2-ec83bc3b83a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method 2: Irregular periodograms find common gap frequencies", \
"Subsection",
 CellChangeTimes->{{3.79002378368626*^9, 3.79002378695093*^9}, {
  3.790023938672411*^9, 3.790023972040873*^9}, {3.790082153255595*^9, 
  3.7900821940660553`*^9}},ExpressionUUID->"d43bb065-a109-4847-ade0-\
dc107c7744fe"],

Cell[TextData[{
 "Here again we use a WFR function, this one being ",
 StyleBox["IrregularPeriodogram", "Program"],
 ". I follow an example in the documentation for that function, so again I \
include the line for opening the definition notebook/"
}], "Text",
 CellChangeTimes->{{3.790082274715*^9, 
  3.7900823599322987`*^9}},ExpressionUUID->"56524e6e-6e58-4789-8aed-\
7857d1abac27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceObject", "[", "\"\<IrregularPeriodogram\>\"", "]"}], "[", 
  "\"\<DefinitionNotebook\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.790082266530985*^9, 
  3.790082270341002*^9}},ExpressionUUID->"08824f6d-2eab-4a64-aa89-\
b209597d513e"],

Cell["\<\
The idea is to find locations of certain dinucleotides, specifically \
\[OpenCurlyDoubleQuote]AA\[CloseCurlyDoubleQuote], \[CloseCurlyDoubleQuote]AT\
\[CloseCurlyDoubleQuote], and \[CloseCurlyDoubleQuote]TT\
\[CloseCurlyDoubleQuote]. There is a large body of literature indicating that \
these in particular show three-periodicity. Actually one usually works with \
related trimers or tetramers, but the relatively small substring lengths \
warrant using the dinucleotides to get sufficient data. We work with gap \
lengths between these dinucleotides, and try to assess strong frequencies \
from that data. The three-periodic substrings will appear as having strong \
frequency components at 2\[Pi]/3 and 4\[Pi]/3. To cut back on noise in \
assessing common gaps, we remove those that only appear one time in a given \
substring.\
\>", "Text",
 CellChangeTimes->{{3.790082630984077*^9, 3.790082855808126*^9}, {
  3.7900829397243834`*^9, 
  3.790082966644898*^9}},ExpressionUUID->"0abfb6f7-f89e-46f5-a291-\
550bce2fab99"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"at4", "=", 
   RowBox[{"\"\<AA\>\"", "|", "\"\<AT\>\"", "|", "\"\<TT\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"posnlists", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringPosition", "[", 
        RowBox[{"#", ",", "at4"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "&"}], ",", "vsubstrings"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdiffs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Outer", "[", 
      RowBox[{"Subtract", ",", "posnsj", ",", "posnsj"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"posnsj", ",", "posnlists"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdiffs2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", "#", "]"}], ",", 
        RowBox[{"aa_", "/;", 
         RowBox[{"(", 
          RowBox[{"aa", "\[LessEqual]", "2"}], ")"}]}]}], "]"}], "&"}], ",", 
     "pdiffs"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tallies", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Tally", ",", "pdiffs2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"talliesS0", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ReverseSortBy", "[", 
       RowBox[{"#", ",", "Last"}], "]"}], "&"}], ",", "tallies"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"talliesS", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DeleteCases", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", "1"}], "}"}]}], "]"}], "&"}], ",", "talliesS0"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7900829147535267`*^9, 3.790082931459696*^9}},
 CellLabel->
  "In[542]:=",ExpressionUUID->"f33613c4-a6b4-41f6-aaf5-dc86950d7c9c"],

Cell["\<\
Now compute periodograms based on these gaps. Note that while we compute \
these at regular intervals, the inputs are not regular and so the irregular \
periodogram really is warranted. We compute over a range that begins well \
before 2\[Pi]/3 so that we can remove any that might be large near that value \
but have larger spikes earlier.\
\>", "Text",
 CellChangeTimes->{{3.790082989904364*^9, 
  3.790083136623571*^9}},ExpressionUUID->"3125489b-1347-4a2d-b9a9-\
22a7dc44ef23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pgrams", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"timesC", ",", "valsC0"}], "}"}], "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"talliesS0", "[", 
         RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"valsC", "=", 
       RowBox[{"valsC0", "-", 
        RowBox[{"Mean", "[", 
         RowBox[{"N", "@", "valsC0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", "\"\<IrregularPeriodogram\>\"", "]"}], "[", 
         RowBox[{"w", ",", "timesC", ",", "valsC", ",", 
          RowBox[{"Method", "\[Rule]", "\"\<Deeming\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"w", ",", "1.1", ",", "2.4", ",", ".01"}], "}"}]}], "]"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"Length", "[", "talliesS", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.78982294317328*^9, 3.789822974322736*^9}, {
   3.7898244842769127`*^9, 3.789824489668227*^9}, {3.789935500751802*^9, 
   3.78993550981496*^9}, 3.789935650681665*^9},
 CellLabel->
  "In[549]:=",ExpressionUUID->"4bb7f5db-1b3f-41cb-b5b3-7510bbd70c1b"],

Cell["Again it is instructive to see some plots.", "Text",
 CellChangeTimes->{{3.790083482516029*^9, 
  3.7900834979499273`*^9}},ExpressionUUID->"1285c72c-8692-4c20-8524-\
d68799737f5c"],

Cell["We will determine candidates ", "Text",
 CellChangeTimes->{{3.790083169671294*^9, 
  3.7900831780164223`*^9}},ExpressionUUID->"fa334ada-d5b4-4442-9067-\
08a11e009da5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"freqs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"1.1", ",", "2.4", ",", ".01"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{"freqs", ",", 
        RowBox[{"pgrams", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.790083517052966*^9, 
  3.790083582390094*^9}},ExpressionUUID->"1a85f828-4dcf-445f-a573-\
6bd691d6e9d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw11QlQ1HUUB/D//78oyAaI7mKgcrhyqJApFFnRe56gMoyQjhoYUxR5s2jZ
DEJKoajtqCt5l0KQhgcGgpIjElIeHIHBuIpm3IMa197LXvHf/+s3w+zsMPOd
3+993nsb8HFawqccwzDfjP7xn6dO8mcYin06s9nZMqzVhSQduj0Mv9/3q/Yo
n4X/xlf67nk5DLFvBF71XcyhtCS6I0OiBnHkJXl5lgjfc1UVyqPU0DdS05Tw
fCJ+lsofNZRnJlVFumvh8G0+UA2rqwuv+T1wxV9H0+Ir1VDrFuo9kDcHOzMk
o4lqKNAcn6zaGIxiPs5VA4ttT9Pq91VARDh/NJB7+fw879zxuO4QH6iB6o9U
a14U+eDel/wFNZBsKg1pl9WB43olGkiNC1LbN76Kj/g4lQaam9pOyzOkyDiO
Fi6kBR1wDtTAjCQ+UAs9sraouF8qIYF/brwWOrXOy6/0DsFO/noZWkjYMbR7
zLAeivi4Qi1wA/Osf+6UYGMDf7SQzBZ0nxnngnq+fLrR79mq/XMlvujHP9dX
B7fvOm1RlPlgDH+9aB1UNo4X/3peD+l8nFwHrDrdiFksCh46uP/h2djiaBF5
6MBQIV5uZCXkoYPDW8MS09e4kIceLjnnZWGoK3no4eIX7QrtXgl56KEhLUK1
7cQUFDz0kBrwxfX+riDy0MPnFQ1FjMsQCB56WN1u7q5LkZGHARQXNZXLDg2S
hwFm1B/Z+oCbgo7yJRlg+ROPyDzzQvIwwK6GqN/jTqnJwwCb/l74rWeJJ3kY
wPd6yuC+y/PJwwgHl/u/+bNyMs50BBphcOVw8uTaYBQ8jCB3OX+zuN4PBQ8j
PI/J3X0wMAYFDyMobnW1FXYNg+BhhCBZeGbyjWnkYYS4Rac8zoW7kocJfpNF
3mjMCyUPE+y4aFdFb5Oh4GGCHNEfBx7HJpCHCXp7fnYfp5xJHiaIzolN6b82
nTxMUGWzKj33pJLHCGTtYHeUiZ3IYwREm9Kd/N72J48RsAVEuM1Z6U8eIzDW
s6OjeIUWBI8RSEvW1OwbmEfzMQIdZS2W56Ve6IhzNcMDzZ4PGC9PFDzM0N1s
vqdk1CB4mGFCfqLS26sVBA8zNPUp1pZK//cwwyfri2o3n7OC4GEG7aPEt8+k
jCUPC3wWoMrLP+lJHhZY0fL+kx55H82HBYLrDjSI3L0w0+FhgZjme/1a61zy
sMDUNdsHWivt8KfDwwJ/nakocgmTkocFcsWy0OpGljyskPH0gP1UcDB5WOFI
lNv2jqWTyMMK2bIPqrYVeJKHFdzuHI4+uD6CPKzwVN+u2hIxjjysUKMqvLNg
SAmChw32u09f8lAjJg8bxEcl1YYlGkDwsEF+1ovs/OK3yMMGC2IVqy4GSWg+
bNC8MmFcn9yZPGwwzXjnpxtznMjDDnH/bPnq2YpXyMMOi1QupuysH8nDDjUx
02sSL3vTfNjh1sebkptmuaHgYQfl/HlN9UoPmg87nG2r37XqlWEQPBjE2POf
l4VMpf5icMvagoSvmQko7C8G+/p0rV7sMxDex+CGwLWiwAo/mh8GQ733DU4t
KaX3MqhQtp97XelL88SgVDRUVCa2075mcNmJfssy1f+eDP62uHTkaCugI66S
wQ8/PVahkPrQ/mPwzOaW487fFNL+YPDK6yEp8knu5M3g5KsFKo8xLNWLxe3P
zBtWDQ6D4M/iVi/bkpz5j2m/sHh8YHt3/wV/6gcWZ1WtztkbNYH2DYub77vf
7A2TUH+weDq5THfyhYn6ncXOnE27e+87U7+waH1378xwwzSqN4vSho3Bud+1
gdA/LK7LvHt60f5gqj+LV3uOPNy5ZDb1E4sv7/w7uz1oOs0Hh+Fvfi3Pfec1
dJRPwqGp7sLadilHHhx+/4/p0lvGEOo3Dh9mbG0cuBtJHhz6lyws1yl6wMGR
yqEiwXXplPkB5MGhy5ioGV/6z6V+5HC2tqelNNaFPDi0mLnHP8Q7kQeHaUcP
5u7Z2Ef7j8Op6eHlVXUzqV85fP6eqDNF7E8eo/8Pd2o9vcuDPES488cs0c1M
Kc3j6O/Ow66AsfnPwMERLsJVIbdVqmMT8T8iY86B
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "a14fbee1-7765-4993-9079-9c72821f5fed",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 180.15839480980313`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "ca1eb9f2-1ca4-4b62-ad17-f7b460459b63",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 66.12705757415026}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "aadb8962-5d1f-422f-8cde-4c6701193b6d",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 79.81942438160432}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw11XlUjXkYB/D3fWPklq3eXEml5d7kapIkBj2PmMmaiuNYyoxGtmwVQ4WO
LcaaMrShVKfUMI5IMTQaByNka5ixhxpZu/ta473v4znnPfe/7/n9ns/z/K5H
7IqoOI5hmM2fP+E3N0eoNrDp1+P4k48K/FMzIHpvXRvkXZNtOFrqie8iq922
vm2D2KeTmorTcsHpRNiLFF4JBZUDIh6oZRgieVC0crQSpozMv7Lb4SksXCCU
EvJq5Su8DX0wo04IVILfXP2bnudcseZzWmS1EqLvLpZ8b3kNTSn850QlXHuc
mXMvIxDthDiJCvjS26HJvj44NFAoFVTv+KHAV8pjzF4hUAXTHLfuyZumg/S3
wgFVENi5e6dhfnK0Hu+EClwv3eLnD+2LD4W4ByqIV3ffsGesKzLWUkNQgENo
VXkd+EYLgWooLelWtn65DKOE60aqwStZUdGyrQ1SheOlqGFqXMOB6bdZLBbi
itQQXBW82/49jzdvCKWGwp7fGPQvuqNWaJ9GDXsz68zPvVh0F67rpoHQG0xC
/wX9cLxwvDANxMg9napDWUwQ4lZqQHLn8IGGwx4oemhgRGvJqYwUhjw0YOoa
3OiRY0seGuAb3aLKvnZA0UMLPq/SBt0+40keWlgYefrAlqheKHpoYZam2Vfx
xI48tLDRP3lyaIGUPLRQXBiUmm+RoOihhU/u+2I9E3UgeuhgYuqkd+ENfuSh
gyeqkQ15zo5obV+0DhY6X8lVyJ1R9NBBl2zHpIOeCvLQQfNF+5+M9oPJQweS
Y1PH7h8rJQ89zMvrm8h8ZYaB1kA9FNrWr9UFaUD00MMiz8RlqnZ/FD30cLXN
5aV9izt56OFwt8rq/kkMeeghVz1krnHMYPLQw8iLUtXyNVLyMMDyHXVXP5y0
Iw8DxKRU7qx45EIeBihrPiRt6sSThwGyd/0+aJvmOYgeBhjGrRocmeBOHp/z
3CIaz/8hJw8jyJ7/NnN/5wDyMIJnbeFfb3dpaT+MMG7YDsefs3jyMMJB0+Fw
O0sv8jCC16iw091sW2g/jDCxuGb6uhopWuMkJphdGH0/5EFP8jDB8KeN55Yz
tuRhgol2fyfElbPkYYJHt/iMrhI38jBBWX3EzewxRSB6mGDZgH21qxYHkYcZ
Vk/Y6f+6yQlFDzPcXrKxt2wTT/thBtcZisX6KUpYZ/UwQ58D+aEr5/cmDzM8
24S2ulgbvGX1MIOpJrXpu9kGED3MUDzk/RnzQ3vysMBk84Lu3ebIycMCSW+m
oMpHRh4WKD7+Yyk/L4I8LBDa2HJp/2Se9sMCMuOo0a/Tv7xXFniV/PHX1vxg
8miHHqrNW/o958mjHb5NPxmW6KUnj3aocIuucX7pQB7t0LYm3San5DqIHu0w
tVd9gSSNpf1oh2BVoDQuzgCiRwcsUj9ucS7qRB4dEF9/6FRm+DMQPTogxLn3
9NpYjjw6YEbNwRH317mSRwd8qpTGV8s+kEcHlIE87VCcB3kweLCqdOCzgTZ0
HwYbs8ZnVi5bSO8Xg13+kwRm/2tD92MwYlNWTVOplvaHwdXX5jlv523pPWDw
n7uZG9Mv9KF9YrD5Qkb9WBc3uj+D5R3yvVpLCHky6PeuNWJQaDBa46oZLHPa
mVORvJb2jcFf7LIYf5ck6g+DyZzRtUg1jvaPwcQj2q15k4bQ/LK4flpm1YhW
jvxZhNjwLfVyb+ofi7l1Pe9EKQwgzgOL8plBneYcVdB8sxj+OKDHmQQliPPB
oulyBT8oy4v6y2LfY2lz/JJegjgvLHIq7+HZRwKo3yzeyx/pcDbOj+aHxe3n
d3uXpDZT/1ksqsj38foqhOaJRUUqRJ/W+pAHh6NjlpW/uFUF1vbxHGLhtgmJ
pzkUPTiUKTU3eji5kweHMaN3VwcscaT94XD/6i47L8RL0cqxgMOasONLXwde
p/8bDguut64/X9sCogeHzLSia/6zfMmDw/oBtTPOTu5FHhzOPqG7HDbThTw4
dA1LGXc1wI08OKwoXzPk/FIN7R+HQ+eVxHsX3KH5tcEsr4GGyFVf3kcbfPQw
xMM+3QhWjkAb3BCY1hA28wn8D8uWtUA=
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "27a6f49b-cf95-44b6-ab6e-b1b023f52b59",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 391.6043944771759}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "294d7ab2-4dfe-4a79-b05c-d85566e2bd0b",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 469.3788491233855}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
wwjvt2oOyer1YODwN0Ke66It8zJd8T+dGcNZ
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "b5508e67-6f6f-46d0-b592-6a6e5e680319",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 298.82898624264}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "fb7b10c7-bbfb-4e81-ada3-cfc76b2e9621",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 103.9939827581406}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
sOpY2XLcaoVmDn8RWmfJtaVJXvg/w7/BeA==
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "f71ab52e-35fd-4a97-9a39-ea6025bdac62",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 134.55384094291358`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "0bb296a5-c1c8-4694-b8a6-d8003e88713a",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 82.96385702557647}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
fBfd2dJVaoZ6Dn8jjPBrSf3aOAr/B/TBsuY=
         "]]}}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[1.6]}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}, {
       {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
        0.009166666666666668], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
    ExpressionUUID -> "09573458-2d04-4d0d-a2d3-819949ee7ee7",
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{True, True},
    AxesLabel->{None, None},
    AxesOrigin->{1.072916666666667, 0},
    DisplayFunction->Identity,
    Frame->{{False, False}, {False, False}},
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}},
    PlotRange->{{1.072916666666667, 2.4}, {0, 90.71945024769016}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7900835247852182`*^9, 3.790083535561548*^9}, 
   3.790083585308838*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"efd5685a-9f60-490c-8e01-35a836fe5695"]
}, Open  ]],

Cell["\<\
Several show strong spikes in the frequency range of interest, and they tend \
to exceed 150. We use that to determine the \[OpenCurlyDoubleQuote]keepers\
\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.790083603941861*^9, 
  3.790083655846695*^9}},ExpressionUUID->"8c113cc9-9ecf-42af-a2ad-\
5f73e7ae9d18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"candidateHotStringQ", "[", 
   RowBox[{"freqs_", ",", "vals_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"2.00", "\[LessEqual]", 
    RowBox[{"freqs", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"FirstPosition", "[", 
        RowBox[{"vals", ",", 
         RowBox[{"Max", "[", "vals", "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[LessEqual]", "2.20"}],
    "&&", 
   RowBox[{
    RowBox[{"Max", "[", "vals", "]"}], ">", "150"}]}]}]], "Input",
 CellChangeTimes->{{3.7900836680790377`*^9, 3.790083684559415*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"f4f977b0-bb53-48b2-81e8-2e599dfaba6c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hotList", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"candidateHotStringQ", "[", 
       RowBox[{"freqs", ",", "#"}], "]"}], "&"}], ",", "pgrams"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"middlePosns", "=", 
   RowBox[{
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "pgrams", "]"}], "]"}], "-", "1"}], ")"}]}], 
    "+", "250"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"hotMiddles", "=", 
  RowBox[{"Pick", "[", 
   RowBox[{"middlePosns", ",", "hotList"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.790083676432262*^9, 
  3.790083743104816*^9}},ExpressionUUID->"a8b71921-c5de-4209-9c65-\
905afc1ee596"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "550", ",", "650", ",", "750", ",", "1450", ",", "1550", ",", "1650", ",", 
   "2850", ",", "2950", ",", "3050", ",", "3150", ",", "3250", ",", "3350", 
   ",", "3450", ",", "3550", ",", "3650", ",", "3750", ",", "3850", ",", 
   "3950", ",", "4750", ",", "4850", ",", "4950", ",", "6050", ",", "6250", 
   ",", "6350", ",", "6450", ",", "6550", ",", "8050", ",", "8150", ",", 
   "8250", ",", "8350", ",", "8450", ",", "14750", ",", "14850", ",", "15750",
    ",", "18650", ",", "18850", ",", "18950", ",", "19650", ",", "19850", ",",
    "19950", ",", "20050", ",", "20150", ",", "20250", ",", "20350", ",", 
   "20450", ",", "21750", ",", "24150", ",", "24450", ",", "24550", ",", 
   "24650", ",", "25550", ",", "25850", ",", "26150"}], "}"}]], "Output",
 CellChangeTimes->{3.790083745383555*^9},
 CellLabel->
  "Out[568]=",ExpressionUUID->"8197b9a7-5ae0-4160-a471-d49a73edfc51"]
}, Open  ]],

Cell["Again we clump these.", "Text",
 CellChangeTimes->{{3.7900837634973917`*^9, 
  3.790083769779278*^9}},ExpressionUUID->"9c649b25-881a-423e-8ad7-\
50ef3b0ecf8b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hotRuns", "[", 
  RowBox[{"hotMiddles", ",", "sublength", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{
  3.790083783571744*^9},ExpressionUUID->"839b9cf4-36cb-455d-924c-\
b01f964c157d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"300", ",", "1000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1200", ",", "1900"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2600", ",", "4200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4500", ",", "5200"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5800", ",", "6700"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7800", ",", "8700"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14500", ",", "15100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15500", ",", "16000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18400", ",", "19100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19400", ",", "20600"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21500", ",", "22000"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23900", ",", "24700"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25300", ",", "25900"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25900", ",", "26400"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7900837852198687`*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"dd56ad5a-b13e-49f0-9f8e-ffec8b76764b"]
}, Open  ]],

Cell["\<\
This tends to be a more spare list than that from method 1. All the same, \
they do appear to have considerable overlap.\
\>", "Text",
 CellChangeTimes->{{3.790083841256962*^9, 
  3.790083875829152*^9}},ExpressionUUID->"93c54bae-25a0-41bd-b881-\
afe9c7bdc34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alignment-free alignment", "Subsection",
 CellChangeTimes->{{3.790084254983056*^9, 3.790084256151226*^9}, {
  3.790086009168127*^9, 
  3.790086015088221*^9}},ExpressionUUID->"689d100e-5fa3-4019-86cb-\
808fa09a15d7"],

Cell["\<\
Genome alignment is done in order to either connect subsequences, or to \
compare one genome to another to check for possible relationships. It is \
typically performed using string processing based methods, and these can be \
expensive. In this section i will show a method that falls very much within \
the \[OpenCurlyDoubleQuote]alignment-free\[CloseCurlyDoubleQuote] family of \
genome analysis. But we deploy it in a way that actually can inform alignment \
possibilities, by narrowing the search ranges.\
\>", "Text",
 CellChangeTimes->{{3.790086220691264*^9, 3.790086389543251*^9}, 
   3.7901069185629663`*^9},ExpressionUUID->"42b6339f-1fa5-4e02-a964-\
038b2a8f7538"],

Cell[TextData[{
 "The idea is as follows. From the phylogenetic tree in the first section we \
already know that the 2019-nCoV appears to be most closely related to two bat \
SARS-like coronaviruses. We will compare the same 2019-nCoV genome used in \
the prior section to one of those two similar ones. As in the last section we \
again use substrings of length 500. For this work I do require the code used \
in the WFR function ",
 StyleBox["PhylogeneticTreePlot", "Program"],
 ", so this will be a bit more elaborate from the code point of view. One of \
the tools is itself a WFR function, ",
 StyleBox["FCGRImage", "Program"],
 ". That function actually creates images from DNA strings. Since we really \
want the underlying matrices we convert back using ",
 StyleBox["ImageData", "Program"],
 "."
}], "Text",
 CellChangeTimes->{{3.790086220691264*^9, 3.7900865109115143`*^9}, {
   3.79008665871566*^9, 3.790086715403431*^9}, {3.790087422364375*^9, 
   3.790087482245442*^9}, 3.79010659558241*^9, {3.790106929431436*^9, 
   3.790106940117786*^9}},ExpressionUUID->"0aaae91e-5868-4e41-89bf-\
bed2f819ebb7"],

Cell[CellGroupData[{

Cell["Support code", "Subsubsection",
 CellChangeTimes->{{3.7900868217475433`*^9, 
  3.7900868243399*^9}},ExpressionUUID->"dd6f2e16-984f-4533-95c6-9f2c3c79ed90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"srules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<U\>\"", "\[Rule]", "\"\<T\>\""}], ",", 
     RowBox[{
      RowBox[{"Except", "[", 
       RowBox[{"Characters", "[", "\"\<ACGT\>\"", "]"}], "]"}], "\[Rule]", 
      "\"\<\>\""}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"chars", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<A\>\"", ",", "\"\<T\>\"", ",", "\"\<G\>\"", ",", "\"\<C\>\""}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"replace", "=", 
   RowBox[{"Dispatch", "[", 
    RowBox[{"Thread", "[", 
     RowBox[{"chars", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.75347283648125*^9, {3.753473938029674*^9, 3.753473947915803*^9}, {
   3.753474304228881*^9, 3.753474318589628*^9}, {3.753474648775257*^9, 
   3.753474649433894*^9}, {3.753475569799128*^9, 3.753475570443009*^9}, {
   3.753475636741787*^9, 3.7534756373307962`*^9}, {3.7534762826909924`*^9, 
   3.753476283524138*^9}, {3.7535276557883387`*^9, 3.7535276587491627`*^9}, {
   3.753529778399157*^9, 3.753529785060402*^9}, {3.7535403454566803`*^9, 
   3.753540349712929*^9}, {3.753551105339957*^9, 3.7535511088462257`*^9}, 
   3.753553848823008*^9, {3.7535575416783257`*^9, 3.753557633072822*^9}, 
   3.7538023603389482`*^9, {3.753812536420205*^9, 3.753812541026885*^9}, 
   3.753898634910118*^9, 3.7538986690691357`*^9, {3.754160379281934*^9, 
   3.754160397880314*^9}, 3.754160442585061*^9, 3.7541604769380913`*^9, {
   3.754164763465344*^9, 3.7541647736091337`*^9}, {3.75421935739226*^9, 
   3.7542193626255407`*^9}, {3.754234262949684*^9, 3.754234267188389*^9}, {
   3.754234943133091*^9, 3.754234972317915*^9}, 3.754252682561654*^9, {
   3.7542527212325706`*^9, 3.754252772224105*^9}, {3.7544160229626837`*^9, 
   3.7544160289784937`*^9}, 3.758221807001786*^9, 3.765543319366376*^9, {
   3.768042144005989*^9, 3.768042144685779*^9}, 3.7680720719638767`*^9, {
   3.768225727733179*^9, 3.768225728266617*^9}, {3.768499409266904*^9, 
   3.768499414376893*^9}, 3.7684996268600073`*^9, {3.768499795528018*^9, 
   3.7684997962785473`*^9}, {3.782237739706399*^9, 3.78223774495302*^9}, 
   3.7822396462458687`*^9, {3.789825900032579*^9, 3.7898259236240664`*^9}, {
   3.790086791148149*^9, 3.7900867915726223`*^9}},
 CellLabel->
  "In[656]:=",ExpressionUUID->"aebfd072-6385-4ea2-b6a3-8ac091feb211"],

Cell[BoxData[
 RowBox[{
  RowBox[{"processNucleotideString", "[", 
   RowBox[{"chars_", ",", "dim_", ",", "freq_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"fcgr", "=", 
       RowBox[{"ImageData", "[", 
        RowBox[{
         RowBox[{
         "ResourceFunction", "[", 
          "\"\<FCGRImage\!\(\*StyleBox[\"\\\"\<\>\", \"Program\"]\)\>", 
          StyleBox["]", "Program"]}], "[", 
         RowBox[{"chars", ",", "dim"}], "]"}], "]"}]}], ",", "ftt"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", "fcgr", "]"}], "==", "0"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fcgr", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"fcgr", "/", 
           RowBox[{"N", "[", 
            RowBox[{"Max", "[", "fcgr", "]"}], "]"}]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "5"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ftt", "=", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"FourierDCT", "[", 
           RowBox[{
            RowBox[{"fcgr", "-", 
             RowBox[{"Mean", "[", 
              RowBox[{"Flatten", "[", "fcgr", "]"}], "]"}]}], ",", "4"}], 
           "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"1", ";;", "freq"}], ",", 
            RowBox[{"1", ";;", "freq"}]}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ftt", "-", 
        RowBox[{"Mean", "[", "ftt", "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.790088197770198*^9, 3.790088203280963*^9}},
 CellLabel->
  "In[673]:=",ExpressionUUID->"2cf3d625-a5a6-4465-b57d-cd909efbb534"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trainVectorsProcess", "[", 
    RowBox[{"ivecs_", ",", "vals_", ",", "keep_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"uu", ",", "ww", ",", "vv", ",", "udotw", ",", "norms"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"uu", ",", "ww", ",", "vv"}], "}"}], "=", 
       "\[IndentingNewLine]", 
       RowBox[{"SingularValueDecomposition", "[", 
        RowBox[{"ivecs", ",", "keep"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"udotw", "=", 
       RowBox[{"uu", ".", "ww"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"norms", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{"#", ".", "#"}], "]"}], "&"}], ",", "udotw"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"udotw", "=", 
       RowBox[{"udotw", "/", "norms"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"udotw", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"udotw", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"Log", "[", "norms", "]"}], "}"}], "]"}], ",", "2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Nearest", "[", 
         RowBox[{"udotw", "\[Rule]", "vals"}], "]"}], ",", "vv"}], "}"}]}]}], 
    "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testVectorsProcess", "[", 
   RowBox[{"ivecs_", ",", "vv_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tdotv", ",", "norms"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tdotv", "=", 
      RowBox[{"ivecs", ".", "vv"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"norms", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"#", ".", "#"}], "]"}], "&"}], ",", "tdotv"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"tdotv", "=", 
      RowBox[{"tdotv", "/", "norms"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tdotv", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"tdotv", ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"Log", "[", "norms", "]"}], "}"}], "]"}], ",", "2"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "tdotv"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6442454853389683`*^9, 3.6442454891286573`*^9}, {
   3.644246067676279*^9, 3.644246101212682*^9}, {3.64424616929699*^9, 
   3.6442461725953608`*^9}, {3.64424620597202*^9, 3.6442462076971693`*^9}, 
   3.644246272117345*^9, {3.644246312574709*^9, 3.644246318559022*^9}, {
   3.64424767903514*^9, 3.644247703856255*^9}, 3.64424929990292*^9, {
   3.644249579191605*^9, 3.644249584404579*^9}, {3.644249673511764*^9, 
   3.644249689513082*^9}, {3.644249769721855*^9, 3.644249778237253*^9}, {
   3.644250847174396*^9, 3.644250889940976*^9}, {3.6442521595861692`*^9, 
   3.644252166032456*^9}, {3.6442524096182327`*^9, 3.644252425613566*^9}, 
   3.644252572607476*^9, {3.644253067514153*^9, 3.644253116436095*^9}, {
   3.644253155962661*^9, 3.6442531594662027`*^9}, {3.644253224764233*^9, 
   3.6442532294616127`*^9}, {3.644253333277779*^9, 3.644253353535542*^9}, {
   3.644253401486635*^9, 3.644253416864129*^9}, {3.64425349542066*^9, 
   3.644253503646022*^9}, {3.644327699662265*^9, 3.644327716829473*^9}, {
   3.6443279758251753`*^9, 3.644327988641138*^9}, 3.644328061105042*^9, {
   3.6443300072922497`*^9, 3.6443300388295937`*^9}, {3.644330074955714*^9, 
   3.64433007743823*^9}, {3.644334187686393*^9, 3.644334199461389*^9}, {
   3.644595035620726*^9, 3.644595037841281*^9}, {3.644670802337078*^9, 
   3.644670821713065*^9}, {3.644756024854946*^9, 3.644756032457802*^9}, {
   3.644756107307581*^9, 3.644756110883328*^9}, {3.644756145987925*^9, 
   3.644756151497093*^9}, {3.644791281248036*^9, 3.6447913027824173`*^9}, 
   3.6447931524858503`*^9, {3.660493448691207*^9, 3.660493465794343*^9}, {
   3.660493943729925*^9, 3.6604939470406933`*^9}, {3.660493990577284*^9, 
   3.660493992513976*^9}, {3.660497138573241*^9, 3.660497146549399*^9}, {
   3.660500709893394*^9, 3.660500729468388*^9}, {3.6605010213053017`*^9, 
   3.660501023597274*^9}, {3.660501075906205*^9, 3.660501133802681*^9}, {
   3.660501575872902*^9, 3.660501605754038*^9}, 3.660501664011427*^9, 
   3.660501760763114*^9, {3.660501947943437*^9, 3.6605019712372293`*^9}, {
   3.660502013013295*^9, 3.6605022204189777`*^9}, {3.660502263027821*^9, 
   3.660502267420054*^9}, {3.660507834398799*^9, 3.660507882230425*^9}, 
   3.6605080647483892`*^9, {3.660508099146043*^9, 3.660508128221826*^9}, 
   3.660508159686913*^9, {3.660508191427684*^9, 3.6605082241582108`*^9}, {
   3.660508285812811*^9, 3.660508286308429*^9}, {3.660508392989429*^9, 
   3.660508401782147*^9}, {3.660508433503447*^9, 3.660508438374536*^9}, {
   3.660508536365157*^9, 3.6605086923452044`*^9}, {3.660508735803215*^9, 
   3.660508742778285*^9}, 3.660509719632163*^9, {3.660509824768237*^9, 
   3.660509962264844*^9}, {3.660510027690181*^9, 3.660510036988015*^9}, {
   3.660510392081423*^9, 3.660510414894505*^9}, {3.660510477476262*^9, 
   3.660510477823174*^9}, 3.660585445101507*^9, 3.661199712716364*^9, 
   3.67430320483204*^9, {3.674303806963194*^9, 3.6743038248189507`*^9}, {
   3.753473070800269*^9, 3.753473076626236*^9}, {3.753473113863056*^9, 
   3.753473197408396*^9}, {3.7534735217828608`*^9, 3.753473543368733*^9}, {
   3.753474023792492*^9, 3.753474038382359*^9}, {3.753527586320216*^9, 
   3.7535275935518827`*^9}, {3.7678950150734167`*^9, 3.76789504392235*^9}, {
   3.790084792848724*^9, 3.7900848428006067`*^9}, {3.79008808091183*^9, 
   3.7900880861825457`*^9}},
 FontSize->12,
 CellLabel->
  "In[666]:=",ExpressionUUID->"c440228b-035e-4b58-b982-5f2e29409d84"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application to our two genomes", "Subsubsection",
 CellChangeTimes->{{3.7900869576614103`*^9, 
  3.790086965229906*^9}},ExpressionUUID->"399286c6-e3fd-432a-894c-\
0c7a3338b53b"],

Cell[TextData[{
 "The method proceeds as follows. We preprocess both sets of substrings, \
first obtaining the FCGR arrays and then reducing dimension with the discrete \
Fourier Cosine Transform (using ",
 StyleBox["FourierDCT", "Program"],
 "). The older genome is the \[OpenCurlyDoubleQuote]reference\
\[CloseCurlyDoubleQuote] set and the 2019-nCoV processed strings will be our \
\[OpenCurlyDoubleQuote]test\[CloseCurlyDoubleQuote] set. A next step is to \
take the reference processed vectors and further reduce dimension using the \
Singular Values Decomposition (SVD for short, implemented as a function \
called, not surprisingly, ",
 StyleBox["SingularValuesDecomposition", "Program"],
 "). We return  both a lookup function created using ",
 StyleBox["Nearest", "Program"],
 ", and the right side conversion matrix from the SVD. this latter is needed \
in order to also reduce dimensions for the test vectors."
}], "Text",
 CellChangeTimes->{{3.790087373891374*^9, 3.790087413523897*^9}, {
   3.790087495613118*^9, 3.79008762149547*^9}, {3.7900876766804934`*^9, 
   3.790087914628161*^9}, 
   3.790106600667288*^9},ExpressionUUID->"5ed55c4d-7222-4cd0-a98f-\
08ebef4318d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"referenceVirus", "=", 
   RowBox[{"vstrings", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"referenceSubstrings", "=", 
   RowBox[{"StringPartition", "[", 
    RowBox[{"referenceVirus", ",", "sublength", ",", 
     RowBox[{"Ceiling", "[", 
      RowBox[{"sublength", "/", "5"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7900842029825163`*^9, 3.790084208647749*^9}, 
   3.7900842497323713`*^9, {3.790087984269807*^9, 3.790088015517783*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"8b189ba4-eb2d-4296-a448-30ee9dbdf41c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dim", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"freq", "=", "30"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"keep", "=", "40"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fttsRefVirus", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Developer`ToPackedArray", "[", 
       RowBox[{"processNucleotideString", "[", 
        RowBox[{"#", ",", "dim", ",", "freq"}], "]"}], "]"}], "&"}], ",", 
     "referenceSubstrings"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nf", ",", "vv"}], "}"}], "=", 
   RowBox[{"trainVectorsProcess", "[", 
    RowBox[{"fttsRefVirus", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "fttsRefVirus", "]"}], "]"}], ",", "keep"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testVecs", "=", 
   RowBox[{"testImageProcess", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Developer`ToPackedArray", "[", 
         RowBox[{"processNucleotideString", "[", 
          RowBox[{"#", ",", "dim", ",", "freq"}], "]"}], "]"}], "&"}], ",", 
       "vsubstrings"}], "]"}], ",", "vv"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7890605536503897`*^9, 3.7890606333616943`*^9}, {
  3.789131113317563*^9, 3.789131114661327*^9}, {3.790084505154728*^9, 
  3.7900845196763067`*^9}, {3.790084563901019*^9, 3.790084577260963*^9}, {
  3.790087973909116*^9, 3.790087975956403*^9}, {3.7900880260931473`*^9, 
  3.790088073741783*^9}, {3.7900883147474127`*^9, 3.79008833148545*^9}},
 CellLabel->
  "In[679]:=",ExpressionUUID->"a7ee724a-b84e-4518-8793-1a2339e53b8f"],

Cell["\<\
The processing from here is straightforward. Each text vector corresponds to \
a substring in the test genome sequence. We look up the \
\[OpenCurlyDoubleQuote]closest\[CloseCurlyDoubleQuote] dimension-reduced \
vector from the reference genome. Sections that tend to align well will be \
recognized because contiguous chunks in the test genome will have, as closest \
neighbors, approximately consecutive runs in the reference set.\
\>", "Text",
 CellChangeTimes->{{3.7900883629295273`*^9, 3.790088495627151*^9}, {
  3.7901069771588583`*^9, 
  3.790106999009474*^9}},ExpressionUUID->"2c9eb5a2-8471-4fae-a4bb-\
6e219e45c573"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"neighbors", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"nf", "[", "testVecs", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7900846735408983`*^9, 3.790084693840233*^9}, {
  3.790084874210621*^9, 3.79008490008948*^9}, {3.790088507002901*^9, 
  3.7900885114790287`*^9}},ExpressionUUID->"b0a73d0c-8a41-4b10-ad4e-\
2ff6a15c0aac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15",
    ",", "16", ",", "17", ",", "18", ",", "20", ",", "20", ",", "21", ",", 
   "22", ",", "23", ",", "24", ",", "25", ",", "26", ",", "26", ",", "27", 
   ",", "28", ",", "29", ",", "31", ",", "32", ",", "34", ",", "34", ",", 
   "35", ",", "36", ",", "37", ",", "38", ",", "39", ",", "40", ",", "41", 
   ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", "47", ",", 
   "48", ",", "49", ",", "50", ",", "50", ",", "52", ",", "52", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "63", ",", "64", ",", "65", ",", "66", ",", "67", 
   ",", "68", ",", "69", ",", "70", ",", "71", ",", "72", ",", "73", ",", 
   "74", ",", "75", ",", "76", ",", "77", ",", "78", ",", "79", ",", "79", 
   ",", "81", ",", "82", ",", "83", ",", "84", ",", "84", ",", "85", ",", 
   "87", ",", "88", ",", "90", ",", "90", ",", "91", ",", "92", ",", "93", 
   ",", "94", ",", "95", ",", "96", ",", "97", ",", "98", ",", "99", ",", 
   "100", ",", "101", ",", "102", ",", "103", ",", "104", ",", "105", ",", 
   "106", ",", "107", ",", "108", ",", "109", ",", "110", ",", "111", ",", 
   "112", ",", "113", ",", "113", ",", "115", ",", "116", ",", "117", ",", 
   "118", ",", "119", ",", "120", ",", "121", ",", "122", ",", "122", ",", 
   "124", ",", "125", ",", "126", ",", "127", ",", "128", ",", "128", ",", 
   "130", ",", "131", ",", "132", ",", "133", ",", "134", ",", "135", ",", 
   "136", ",", "48", ",", "48", ",", "48", ",", "48", ",", "190", ",", "142", 
   ",", "144", ",", "145", ",", "145", ",", "146", ",", "147", ",", "148", 
   ",", "149", ",", "150", ",", "151", ",", "151", ",", "153", ",", "153", 
   ",", "155", ",", "158", ",", "158", ",", "158", ",", "159", ",", "160", 
   ",", "161", ",", "161", ",", "161", ",", "164", ",", "165", ",", "167", 
   ",", "168", ",", "168", ",", "169", ",", "170", ",", "170", ",", "172", 
   ",", "172", ",", "173", ",", "174", ",", "176", ",", "177", ",", "178", 
   ",", "179", ",", "180", ",", "180", ",", "182", ",", "183", ",", "184", 
   ",", "185", ",", "185", ",", "189", ",", "190", ",", "189", ",", "190", 
   ",", "190", ",", "191", ",", "192", ",", "195", ",", "195", ",", "196", 
   ",", "196", ",", "198", ",", "198", ",", "198", ",", "199", ",", "202", 
   ",", "203", ",", "204", ",", "205", ",", "206", ",", "207", ",", "207", 
   ",", "209", ",", "210", ",", "211", ",", "212", ",", "213", ",", "213", 
   ",", "215", ",", "215", ",", "220", ",", "69", ",", "69", ",", "218", ",", 
   "220", ",", "220", ",", "224", ",", "226", ",", "226", ",", "227", ",", 
   "69", ",", "227", ",", "227", ",", "227", ",", "227", ",", "231", ",", 
   "231", ",", "233", ",", "234", ",", "235", ",", "237", ",", "237", ",", 
   "238", ",", "240", ",", "240", ",", "241", ",", "241", ",", "243", ",", 
   "244", ",", "244", ",", "246", ",", "247", ",", "248", ",", "249", ",", 
   "250", ",", "251", ",", "252", ",", "253", ",", "254", ",", "255", ",", 
   "256", ",", "257", ",", "259", ",", "259", ",", "260", ",", "261", ",", 
   "262", ",", "263", ",", "264", ",", "265", ",", "266", ",", "267", ",", 
   "268", ",", "269", ",", "270", ",", "271", ",", "272", ",", "273", ",", 
   "274", ",", "275", ",", "276", ",", "277", ",", "278", ",", "278", ",", 
   "280", ",", "281", ",", "282", ",", "284", ",", "284", ",", "285", ",", 
   "286", ",", "287", ",", "288", ",", "289", ",", "290", ",", "291", ",", 
   "293", ",", "293"}], "}"}]], "Output",
 CellChangeTimes->{{3.790084680281559*^9, 3.7900846958316803`*^9}, {
   3.7900848558950567`*^9, 3.7900849006174393`*^9}, 3.7900885142541924`*^9},
 CellLabel->
  "Out[685]=",ExpressionUUID->"bcd63510-b883-468a-b9c3-40e1aca9c5cd"]
}, Open  ]],

Cell["\<\
I will defer on writing yet more code to do a detailed associating of \
consecutive runs from one to similar runs from the other. By eye one can \
observe that these initially seem to align quite well. We do see that fairly \
late in the set, vector 69 from the reference set is nearest neighbor to a \
few in the test set.\
\>", "Text",
 CellChangeTimes->{{3.790088521259707*^9, 3.7900885836211033`*^9}, {
  3.790088634045661*^9, 
  3.7900886760859413`*^9}},ExpressionUUID->"80e7282d-a360-4ade-9a10-\
f5552d41d3d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{"neighbors", ",", "69"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.790088608621976*^9, 3.7900886243014603`*^9}, {
  3.7900887725444717`*^9, 
  3.79008877658611*^9}},ExpressionUUID->"f6b3d579-4401-4675-b931-\
c0056b409e75"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"69", ",", "218", ",", "219", ",", "227"}], "}"}]], "Output",
 CellChangeTimes->{3.790088625641882*^9, 3.7900887774663143`*^9},
 CellLabel->
  "Out[688]=",ExpressionUUID->"2ce4a2a2-051e-4eab-a68e-36668b40df99"]
}, Open  ]],

Cell["\<\
The first such is of course expected. The later ones indicate that there is \
something of a gap in the test set, where matches to the reference genome are \
out of alignment. We also see that there are a few matches to chunk 227, just \
before and after the final match to chunk 69. We\[CloseCurlyQuote]ll chek \
their locations.\
\>", "Text",
 CellChangeTimes->{{3.790088682469901*^9, 3.790088730014421*^9}, {
  3.7900887796011343`*^9, 3.790088852552372*^9}, {3.790107025004324*^9, 
  3.790107030271426*^9}},ExpressionUUID->"37ae9e73-6662-441d-98f6-\
e5b52a3e8810"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{"neighbors", ",", "227"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.790088758615329*^9, 3.790088759255497*^9}, {
  3.790088857324315*^9, 
  3.7900888589846354`*^9}},ExpressionUUID->"54f3d867-1c43-4626-adb5-\
a3469d100bfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"226", ",", "228", ",", "229", ",", "230", ",", "231"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7900887607334146`*^9, 3.790088859482308*^9},
 CellLabel->
  "Out[689]=",ExpressionUUID->"081039c9-9a9b-47ab-a5df-ddf993bfc49f"]
}, Open  ]],

Cell["\<\
This indicates that the sequences are not only approximately back in \
alignment, but that they seem to be so at the same positions in the \
respective genome sequences.\
\>", "Text",
 CellChangeTimes->{{3.790088863744895*^9, 
  3.790088927721653*^9}},ExpressionUUID->"e18d7e86-b833-456e-9f91-\
c2ef8378e935"],

Cell[TextData[{
 "For those interested in the underlying method,  the reference is:\nD. L. \
Alignment-free genomic sequence comparison using FCGR and signal processing. \
BMC Bioinformatics 20:742 (2019). DOI: 10.1186/s12859-019-3330-3 (",
 ButtonBox["handy link",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-\
019-3330-3"], None},
  ButtonNote->
   "https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-\
3330-3"],
 ")"
}], "Text",
 CellChangeTimes->{{3.790087144264633*^9, 3.790087336128862*^9}, {
  3.790088260053073*^9, 
  3.790088295768998*^9}},ExpressionUUID->"383ab7a9-f2f5-441e-9e93-\
c5a5f097c02c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final remarks", "Section",
 CellChangeTimes->{{3.790086937669209*^9, 3.790086941950284*^9}, {
  3.7900890493632593`*^9, 
  3.790089051531418*^9}},ExpressionUUID->"dbd6754f-6f1d-4485-a472-\
9216c758c772"],

Cell["\<\
I showed a few tools of the in Mathematica and the Wolfram Function \
Repository that one can use for genome analysis. These were applied to timely \
examples from the recent 2019 novel coronavirus. As should be obvious, I \
focused, perhaps to a shameless extent, on methodologies with which I am \
quite familiar. I hope these are applicable to work other people are doing. I \
also hope others will consider contributing their own work to this forum and, \
if applicable, to the WFR. \
\>", "Text",
 CellChangeTimes->{{3.7900890781637077`*^9, 3.790089241142127*^9}, {
   3.790089272287915*^9, 3.7900893945445013`*^9}, {3.790089434497341*^9, 
   3.790089493018134*^9}, 
   3.790107097927062*^9},ExpressionUUID->"348d6c7f-aafd-4db0-abf4-\
e4c86dd8910f"]
}, Open  ]]
},
WindowSize->{1269, 690},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowCellBracket->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3cd33646-01b6-4d48-af6c-580da1869cca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 168, 3, 67, "Section",ExpressionUUID->"b32d0b45-a01e-4b77-8d41-4cfb7de70057"],
Cell[751, 27, 807, 13, 78, "Text",ExpressionUUID->"aa817a51-1596-48c2-961f-a0918d63929c"],
Cell[CellGroupData[{
Cell[1583, 44, 2311, 37, 184, "Input",ExpressionUUID->"fdb592d5-7854-4e30-842d-1aa4cfc71ef2"],
Cell[3897, 83, 255, 5, 32, "Output",ExpressionUUID->"65e83792-abc8-4621-bffe-bc12c08ef3a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4189, 93, 182, 3, 54, "Subsection",ExpressionUUID->"03b19571-5dcf-4909-88b7-21f63ce9e9f7"],
Cell[4374, 98, 1529, 27, 122, "Text",ExpressionUUID->"95445642-d546-4045-8963-ee53574b0a00"],
Cell[5906, 127, 325, 7, 34, "Text",ExpressionUUID->"bad828d5-6975-4e6c-adfa-156f6d0a580a"],
Cell[CellGroupData[{
Cell[6256, 138, 406, 10, 28, "Input",ExpressionUUID->"5d0319ca-788d-4250-bfd1-099ea7040ed7"],
Cell[6665, 150, 281, 6, 32, "Output",ExpressionUUID->"ccc3fdba-3ee1-42d9-8fca-7cb51549493d"]
}, Open  ]],
Cell[6961, 159, 814, 14, 78, "Text",ExpressionUUID->"73f30204-334b-4d75-883f-f55f88475701"],
Cell[7778, 175, 1188, 36, 87, "Input",ExpressionUUID->"3b2a09bd-36e7-4b57-a7ef-be42dba37e81"],
Cell[8969, 213, 280, 6, 70, "Text",ExpressionUUID->"c2dc76e1-dfe1-4da9-b2d2-57bf0b7d60f8"],
Cell[CellGroupData[{
Cell[9274, 223, 222, 5, 70, "Input",ExpressionUUID->"0eff5fa6-7888-4dec-88c6-121512ad7860"],
Cell[9499, 230, 897, 15, 70, "Output",ExpressionUUID->"af0db3d8-7cc9-4497-8c73-003da724e35e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10445, 251, 178, 3, 70, "Subsection",ExpressionUUID->"d3abb933-f5c8-486a-b56c-fb0c19e37726"],
Cell[10626, 256, 441, 9, 70, "Text",ExpressionUUID->"3764e445-c982-436c-9a09-972c2baca16d"],
Cell[11070, 267, 1946, 37, 70, "Input",ExpressionUUID->"50796bf8-2240-4d2f-a115-bd67ec67333b"],
Cell[CellGroupData[{
Cell[13041, 308, 486, 8, 70, "Input",ExpressionUUID->"09a1dbba-7e71-4b05-999b-037a94d2a388"],
Cell[13530, 318, 20347, 454, 70, "Output",ExpressionUUID->"cc489670-93b6-4166-a247-6b7f7e970bcb"]
}, Open  ]],
Cell[33892, 775, 527, 10, 70, "Text",ExpressionUUID->"ea7d6a98-8c87-4291-ab4b-1528d601aeb4"],
Cell[34422, 787, 235, 5, 70, "Text",ExpressionUUID->"c8571679-7c2c-4083-97d9-6dce700c982c"],
Cell[CellGroupData[{
Cell[34682, 796, 589, 16, 70, "Input",ExpressionUUID->"66ead76d-9c06-4fb3-a5c0-f8b336e321a9"],
Cell[35274, 814, 3641, 73, 70, "Output",ExpressionUUID->"bf46d890-f2b1-46a8-8c8f-9039bdda68d1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38964, 893, 180, 3, 70, "Subsection",ExpressionUUID->"2dd00b74-8cf4-4d47-b752-e8e357e2865a"],
Cell[39147, 898, 745, 14, 70, "Text",ExpressionUUID->"f553b1b3-f0de-419b-b8f5-339084d51331"],
Cell[CellGroupData[{
Cell[39917, 916, 276, 6, 70, "Input",ExpressionUUID->"a23c4beb-2cea-4630-b6b7-83b13a8ed173"],
Cell[40196, 924, 755, 19, 70, "Output",ExpressionUUID->"55fab184-66e9-4921-b0c2-b9ac7a54777e"]
}, Open  ]],
Cell[40966, 946, 482, 9, 70, "Text",ExpressionUUID->"2124cbb0-a595-4a7d-b155-5a72b4ba3222"],
Cell[41451, 957, 19522, 332, 70, "Output",ExpressionUUID->"3a495363-b497-4ef4-a586-270d019a9f36"],
Cell[60976, 1291, 339, 7, 70, "Text",ExpressionUUID->"055a9cb3-ce3c-4a2b-827f-aa724208b3fa"],
Cell[CellGroupData[{
Cell[61340, 1302, 1080, 23, 70, "Input",ExpressionUUID->"a0271cba-d021-42bf-b8ed-c4478bc9b8c8"],
Cell[62423, 1327, 5993, 154, 70, "Output",ExpressionUUID->"020f4eca-c7e3-4af3-9ee9-37c8222f0a1b"]
}, Open  ]],
Cell[68431, 1484, 477, 9, 70, "Text",ExpressionUUID->"ed788b57-500a-40e2-9415-72dbeeeecccd"],
Cell[CellGroupData[{
Cell[68933, 1497, 695, 18, 70, "Input",ExpressionUUID->"2024415b-1668-4ea6-8e84-3be545babf11"],
Cell[69631, 1517, 5888, 145, 70, "Output",ExpressionUUID->"ef7db084-41af-4b07-b681-2a4b5ade7e7f"]
}, Open  ]],
Cell[75534, 1665, 392, 9, 70, "Text",ExpressionUUID->"c0c98c72-a739-40c5-8496-da91da8fbc17"],
Cell[CellGroupData[{
Cell[75951, 1678, 627, 18, 70, "Input",ExpressionUUID->"561530d1-288a-47f0-846b-e12b1c63bd4e"],
Cell[76581, 1698, 6275, 162, 70, "Output",ExpressionUUID->"0cb96436-d54d-4b64-8a4f-df6aa6833e46"]
}, Open  ]],
Cell[82871, 1863, 460, 8, 70, "Text",ExpressionUUID->"29b3286a-86b9-4e43-a92e-094e9e8d5087"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83380, 1877, 242, 4, 70, "Section",ExpressionUUID->"f0f7cb3f-b5b1-467f-9115-1ad31f7ae76a"],
Cell[83625, 1883, 656, 11, 70, "Text",ExpressionUUID->"52f7d786-138e-471e-a99f-5245a68c0bc6"],
Cell[84284, 1896, 1042, 16, 70, "Text",ExpressionUUID->"05bb8805-3ec9-4a33-b7ee-08325c08e242"],
Cell[85329, 1914, 290, 6, 70, "Text",ExpressionUUID->"3cf463bc-a521-4b30-bd22-9fa665c1f17b"],
Cell[85622, 1922, 303, 8, 70, "Input",ExpressionUUID->"d3554086-b8b5-45b9-9d5d-05a83876b4a0"],
Cell[85928, 1932, 513, 9, 70, "Text",ExpressionUUID->"b5015cff-1830-4221-805c-23903f8585c1"],
Cell[86444, 1943, 520, 12, 70, "Input",ExpressionUUID->"839aa51f-37b5-4890-8d40-1fb86edfad9e"],
Cell[CellGroupData[{
Cell[86989, 1959, 270, 6, 70, "Subsection",ExpressionUUID->"f8cbebe5-8029-4bf3-ac0e-1fcf9662ef5f"],
Cell[87262, 1967, 475, 10, 70, "Text",ExpressionUUID->"725c05b7-e705-49ff-a197-f1ada9ea0cc2"],
Cell[87740, 1979, 1901, 57, 70, "Input",ExpressionUUID->"9c39a47e-6c16-4aa6-9c60-86f1416409ec"],
Cell[89644, 2038, 214, 5, 70, "Text",ExpressionUUID->"2dc8c948-1b20-4245-a089-4c2c3a6ee8ce"],
Cell[89861, 2045, 426, 10, 70, "Input",ExpressionUUID->"5aea51ce-cba6-4961-a88b-27722ae1472c"],
Cell[90290, 2057, 326, 7, 70, "Text",ExpressionUUID->"d49dcac3-2c7b-4a90-a9b6-c61336938ac3"],
Cell[90619, 2066, 704, 18, 70, "Input",ExpressionUUID->"1c47d4db-8d6d-47f4-bf58-f5ab2d9e7694"],
Cell[91326, 2086, 444, 11, 70, "Text",ExpressionUUID->"b64cd25a-0ace-4cce-abd7-0140acbbb37e"],
Cell[CellGroupData[{
Cell[91795, 2101, 666, 15, 70, "Input",ExpressionUUID->"267c0137-8b14-4aaa-bc09-2742b8e0516b"],
Cell[92464, 2118, 74078, 1369, 70, "Output",ExpressionUUID->"33ef1aee-56e1-4522-9a82-72dc8be5e9f6"]
}, Open  ]],
Cell[166557, 3490, 694, 14, 70, "Text",ExpressionUUID->"b3366fdc-6e94-4387-aee2-5ff71aef100f"],
Cell[CellGroupData[{
Cell[167276, 3508, 2251, 55, 70, "Input",ExpressionUUID->"9f6bce09-7300-43ae-9880-97f87833a954"],
Cell[169530, 3565, 3155, 46, 70, "Output",ExpressionUUID->"cf266351-cdd8-4fac-a4c2-8915b97d1c95"]
}, Open  ]],
Cell[172700, 3614, 302, 6, 70, "Text",ExpressionUUID->"8823ed7e-24ad-475f-9c05-29ff6276cff1"],
Cell[173005, 3622, 2195, 57, 70, "Input",ExpressionUUID->"9c4ed136-8526-4561-a504-6d57ebab6203"],
Cell[CellGroupData[{
Cell[175225, 3683, 235, 5, 70, "Input",ExpressionUUID->"adbe96d3-51ba-400f-9715-d0d34cc708e2"],
Cell[175463, 3690, 1356, 40, 70, "Output",ExpressionUUID->"95f1e6dc-42fe-49ef-91b2-ec83bc3b83a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176868, 3736, 305, 5, 70, "Subsection",ExpressionUUID->"d43bb065-a109-4847-ade0-dc107c7744fe"],
Cell[177176, 3743, 384, 8, 70, "Text",ExpressionUUID->"56524e6e-6e58-4789-8aed-7857d1abac27"],
Cell[177563, 3753, 276, 6, 70, "Input",ExpressionUUID->"08824f6d-2eab-4a64-aa89-b209597d513e"],
Cell[177842, 3761, 1031, 17, 70, "Text",ExpressionUUID->"0abfb6f7-f89e-46f5-a291-550bce2fab99"],
Cell[178876, 3780, 1959, 61, 70, "Input",ExpressionUUID->"f33613c4-a6b4-41f6-aaf5-dc86950d7c9c"],
Cell[180838, 3843, 490, 9, 70, "Text",ExpressionUUID->"3125489b-1347-4a2d-b9a9-22a7dc44ef23"],
Cell[181331, 3854, 1341, 34, 70, "Input",ExpressionUUID->"4bb7f5db-1b3f-41cb-b5b3-7510bbd70c1b"],
Cell[182675, 3890, 186, 3, 70, "Text",ExpressionUUID->"1285c72c-8692-4c20-8524-d68799737f5c"],
Cell[182864, 3895, 173, 3, 70, "Text",ExpressionUUID->"fa334ada-d5b4-4442-9067-08a11e009da5"],
Cell[CellGroupData[{
Cell[183062, 3902, 723, 21, 70, "Input",ExpressionUUID->"1a85f828-4dcf-445f-a573-6bd691d6e9d3"],
Cell[183788, 3925, 37986, 766, 70, "Output",ExpressionUUID->"efd5685a-9f60-490c-8e01-35a836fe5695"]
}, Open  ]],
Cell[221789, 4694, 330, 7, 70, "Text",ExpressionUUID->"8c113cc9-9ecf-42af-a2ad-5f73e7ae9d18"],
Cell[222122, 4703, 691, 18, 70, "Input",ExpressionUUID->"f4f977b0-bb53-48b2-81e8-2e599dfaba6c"],
Cell[CellGroupData[{
Cell[222838, 4725, 768, 23, 70, "Input",ExpressionUUID->"a8b71921-c5de-4209-9c65-905afc1ee596"],
Cell[223609, 4750, 925, 15, 70, "Output",ExpressionUUID->"8197b9a7-5ae0-4160-a471-d49a73edfc51"]
}, Open  ]],
Cell[224549, 4768, 165, 3, 70, "Text",ExpressionUUID->"9c649b25-881a-423e-8ad7-50ef3b0ecf8b"],
Cell[CellGroupData[{
Cell[224739, 4775, 214, 5, 70, "Input",ExpressionUUID->"839b9cf4-36cb-455d-924c-b01f964c157d"],
Cell[224956, 4782, 1105, 33, 70, "Output",ExpressionUUID->"dd56ad5a-b13e-49f0-9f8e-ffec8b76764b"]
}, Open  ]],
Cell[226076, 4818, 270, 6, 70, "Text",ExpressionUUID->"93c54bae-25a0-41bd-b881-afe9c7bdc34b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226383, 4829, 221, 4, 70, "Subsection",ExpressionUUID->"689d100e-5fa3-4019-86cb-808fa09a15d7"],
Cell[226607, 4835, 684, 11, 70, "Text",ExpressionUUID->"42b6339f-1fa5-4e02-a964-038b2a8f7538"],
Cell[227294, 4848, 1111, 20, 70, "Text",ExpressionUUID->"0aaae91e-5868-4e41-89bf-bed2f819ebb7"],
Cell[CellGroupData[{
Cell[228430, 4872, 161, 2, 70, "Subsubsection",ExpressionUUID->"dd6f2e16-984f-4533-95c6-9f2c3c79ed90"],
Cell[228594, 4876, 2691, 56, 70, "Input",ExpressionUUID->"aebfd072-6385-4ea2-b6a3-8ac091feb211"],
Cell[231288, 4934, 1960, 52, 70, "Input",ExpressionUUID->"2cf3d625-a5a6-4465-b57d-cd909efbb534"],
Cell[233251, 4988, 5958, 115, 70, "Input",ExpressionUUID->"c440228b-035e-4b58-b982-5f2e29409d84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239246, 5108, 183, 3, 70, "Subsubsection",ExpressionUUID->"399286c6-e3fd-432a-894c-0c7a3338b53b"],
Cell[239432, 5113, 1182, 21, 70, "Text",ExpressionUUID->"5ed55c4d-7222-4cd0-a98f-08ebef4318d7"],
Cell[240617, 5136, 608, 14, 70, "Input",ExpressionUUID->"8b189ba4-eb2d-4296-a448-30ee9dbdf41c"],
Cell[241228, 5152, 1685, 42, 70, "Input",ExpressionUUID->"a7ee724a-b84e-4518-8793-1a2339e53b8f"],
Cell[242916, 5196, 635, 11, 70, "Text",ExpressionUUID->"2c9eb5a2-8471-4fae-a4bb-6e219e45c573"],
Cell[CellGroupData[{
Cell[243576, 5211, 352, 7, 70, "Input",ExpressionUUID->"b0a73d0c-8a41-4b10-ad4e-2ff6a15c0aac"],
Cell[243931, 5220, 3886, 54, 70, "Output",ExpressionUUID->"bcd63510-b883-468a-b9c3-40e1aca9c5cd"]
}, Open  ]],
Cell[247832, 5277, 526, 10, 70, "Text",ExpressionUUID->"80e7282d-a360-4ade-9a10-f5552d41d3d5"],
Cell[CellGroupData[{
Cell[248383, 5291, 306, 7, 70, "Input",ExpressionUUID->"f6b3d579-4401-4675-b931-c0056b409e75"],
Cell[248692, 5300, 249, 5, 70, "Output",ExpressionUUID->"2ce4a2a2-051e-4eab-a68e-36668b40df99"]
}, Open  ]],
Cell[248956, 5308, 577, 10, 70, "Text",ExpressionUUID->"37ae9e73-6662-441d-98f6-e5b52a3e8810"],
Cell[CellGroupData[{
Cell[249558, 5322, 306, 7, 70, "Input",ExpressionUUID->"54f3d867-1c43-4626-adb5-a3469d100bfb"],
Cell[249867, 5331, 265, 6, 70, "Output",ExpressionUUID->"081039c9-9a9b-47ab-a5df-ddf993bfc49f"]
}, Open  ]],
Cell[250147, 5340, 319, 7, 70, "Text",ExpressionUUID->"e18d7e86-b833-456e-9f91-c2ef8378e935"],
Cell[250469, 5349, 702, 17, 70, "Text",ExpressionUUID->"383ab7a9-f2f5-441e-9e93-c5a5f097c02c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[251232, 5373, 209, 4, 70, "Section",ExpressionUUID->"dbd6754f-6f1d-4485-a472-9216c758c772"],
Cell[251444, 5379, 764, 13, 70, "Text",ExpressionUUID->"348d6c7f-aafd-4db0-abf4-e4c86dd8910f"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

